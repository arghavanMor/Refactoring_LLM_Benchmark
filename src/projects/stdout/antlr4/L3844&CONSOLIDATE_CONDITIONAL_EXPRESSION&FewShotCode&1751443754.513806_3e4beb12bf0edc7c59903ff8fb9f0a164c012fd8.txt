[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1mReactor Build Order:[m
[[1;34mINFO[m] 
[[1;34mINFO[m] ANTLR 4                                                            [pom]
[[1;34mINFO[m] ANTLR 4 Runtime Annotations                                        [jar]
[[1;34mINFO[m] ANTLR 4 Runtime                                                    [jar]
[[1;34mINFO[m] ANTLR 4 Tool                                                       [jar]
[[1;34mINFO[m] ANTLR 4 Maven plugin                                      [maven-plugin]
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m----------------------< [0;36morg.antlr:antlr4-master[0;1m >-----------------------[m
[[1;34mINFO[m] [1mBuilding ANTLR 4 4.2                                               [1/5][m
[[1;34mINFO[m] [1m--------------------------------[ pom ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-enforcer-plugin:1.0:enforce[m [1m(enforce-maven)[m @ [36mantlr4-master[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--------------------< [0;36morg.antlr:antlr4-annotations[0;1m >--------------------[m
[[1;34mINFO[m] [1mBuilding ANTLR 4 Runtime Annotations 4.2                           [2/5][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-enforcer-plugin:1.0:enforce[m [1m(enforce-maven)[m @ [36mantlr4-annotations[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mantlr4-annotations[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 1 resource
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.1:compile[m [1m(default-compile)[m @ [36mantlr4-annotations[0;1m ---[m
[[1;34mINFO[m] Nothing to compile - all classes are up to date
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mantlr4-annotations[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /Users/jeancarlorspaul/IdeaProjects/antlr4/runtime/JavaAnnotations/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.1:testCompile[m [1m(default-testCompile)[m @ [36mantlr4-annotations[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.16:test[m [1m(default-test)[m @ [36mantlr4-annotations[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m----------------------< [0;36morg.antlr:antlr4-runtime[0;1m >----------------------[m
[[1;34mINFO[m] [1mBuilding ANTLR 4 Runtime 4.2                                       [3/5][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-enforcer-plugin:1.0:enforce[m [1m(enforce-maven)[m @ [36mantlr4-runtime[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mantlr4-maven-plugin:4.1:antlr4[m [1m(default)[m @ [36mantlr4-runtime[0;1m ---[m
[[1;34mINFO[m] ANTLR 4: Processing source directory /Users/jeancarlorspaul/IdeaProjects/antlr4/runtime/Java/src
[[1;34mINFO[m] Processing grammar: org/antlr/v4/runtime/tree/xpath/XPathLexer.g4
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mantlr4-runtime[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /Users/jeancarlorspaul/IdeaProjects/antlr4/runtime/Java/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.1:compile[m [1m(default-compile)[m @ [36mantlr4-runtime[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 162 source files to /Users/jeancarlorspaul/IdeaProjects/antlr4/runtime/Java/target/classes
[[1;33mWARNING[m] bootstrap class path not set in conjunction with -source 6
[[1;33mWARNING[m] source value 6 is obsolete and will be removed in a future release
[[1;33mWARNING[m] target value 1.6 is obsolete and will be removed in a future release
[[1;33mWARNING[m] To suppress warnings about obsolete options, use -Xlint:-options.
[[1;33mWARNING[m] /Users/jeancarlorspaul/IdeaProjects/antlr4/runtime/Java/target/generated-sources/antlr4/org/antlr/v4/runtime/tree/xpath/XPathLexer.java:[89,29] deserialize(char[]) in org.antlr.v4.runtime.atn.ATNSimulator has been deprecated
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mantlr4-runtime[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /Users/jeancarlorspaul/IdeaProjects/antlr4/runtime/Java/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.1:testCompile[m [1m(default-testCompile)[m @ [36mantlr4-runtime[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.16:test[m [1m(default-test)[m @ [36mantlr4-runtime[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--------------------------< [0;36morg.antlr:antlr4[0;1m >--------------------------[m
[[1;34mINFO[m] [1mBuilding ANTLR 4 Tool 4.2                                          [4/5][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-enforcer-plugin:1.0:enforce[m [1m(enforce-maven)[m @ [36mantlr4[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mantlr3-maven-plugin:3.5:antlr[m [1m(default)[m @ [36mantlr4[0;1m ---[m
[[1;34mINFO[m] ANTLR: Processing source directory /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src
Grammar /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src/org/antlr/v4/parse/ANTLRLexer.g is up to date - build skipped
Grammar /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src/org/antlr/v4/parse/ANTLRParser.g is up to date - build skipped
Grammar /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src/org/antlr/v4/parse/GrammarTreeVisitor.g is up to date - build skipped
Grammar /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src/org/antlr/v4/codegen/SourceGenTriggers.g is up to date - build skipped
Grammar /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src/org/antlr/v4/parse/ActionSplitter.g is up to date - build skipped
Grammar /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src/org/antlr/v4/parse/BlockSetTransformer.g is up to date - build skipped
Grammar /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src/org/antlr/v4/parse/LeftRecursiveRuleWalker.g is up to date - build skipped
Grammar /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src/org/antlr/v4/parse/ATNBuilder.g is up to date - build skipped
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mantlr4[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 7 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.1:compile[m [1m(default-compile)[m @ [36mantlr4[0;1m ---[m
[[1;34mINFO[m] Nothing to compile - all classes are up to date
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mantlr4[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 49 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.1:testCompile[m [1m(default-testCompile)[m @ [36mantlr4[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 45 source files to /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/target/test-classes
[[1;33mWARNING[m] bootstrap class path not set in conjunction with -source 6
[[1;33mWARNING[m] source value 6 is obsolete and will be removed in a future release
[[1;33mWARNING[m] target value 1.6 is obsolete and will be removed in a future release
[[1;33mWARNING[m] To suppress warnings about obsolete options, use -Xlint:-options.
[[1;33mWARNING[m] No processor claimed any of these annotations: org.junit.Rule,org.junit.Ignore,org.junit.Test,org.junit.Before
[[1;33mWARNING[m] /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/test/org/antlr/v4/test/TestASTStructure.java:[78,54] newInstance() in java.lang.Class has been deprecated
[[1;33mWARNING[m] /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/test/org/antlr/v4/test/TestPerformance.java:[1204,81] newInstance() in java.lang.Class has been deprecated
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.16:test[m [1m(default-test)[m @ [36mantlr4[0;1m ---[m
[[1;34mINFO[m] Surefire report directory: /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.antlr.v4.test.TestListeners
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestListeners-1751443831487
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestListeners-1751443831987
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestListeners-1751443832190
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestListeners-1751443832190
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestListeners-1751443832497
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestListeners-1751443832497
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestListeners-1751443832802
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.494 sec - in org.antlr.v4.test.TestListeners
Running org.antlr.v4.test.TestSemPredEvalLexer
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalLexer-1751443832958
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalLexer-1751443833074
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalLexer-1751443833181
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalLexer-1751443833273
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalLexer-1751443833376
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalLexer-1751443833479
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalLexer-1751443833583
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.722 sec - in org.antlr.v4.test.TestSemPredEvalLexer
Running org.antlr.v4.test.TestXPath
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestXPath-1751443833683
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestXPath-1751443833751
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestXPath-1751443833850
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestXPath-1751443833907
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestXPath-1751443833959
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestXPath-1751443834021
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestXPath-1751443834079
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.438 sec - in org.antlr.v4.test.TestXPath
Running org.antlr.v4.test.TestActionTranslation
Tests run: 92, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.159 sec - in org.antlr.v4.test.TestActionTranslation
Running org.antlr.v4.test.TestATNParserPrediction
[1, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (tokens { A B C) (RULES (RULE a (BLOCK (ALT x B))) (RULE b (BLOCK (ALT x C))) (RULE x (BLOCK (ALT A) (ALT EPSILON)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<x>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<x>", arrowhead = normal];
s10 -> s11 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s3 [fontname="Times-Italic", label="&epsilon;"];
}
[2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (tokens { A B C) (RULES (RULE a (BLOCK (ALT x B))) (RULE b (BLOCK (ALT x C))) (RULE x (BLOCK (ALT A) (ALT EPSILON)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<x>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<x>", arrowhead = normal];
s10 -> s11 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s3 [fontname="Times-Italic", label="&epsilon;"];
}
[3, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (tokens { A B C) (RULES (RULE a (BLOCK (ALT x B))) (RULE b (BLOCK (ALT x C))) (RULE x (BLOCK (ALT A) (ALT EPSILON)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<x>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<x>", arrowhead = normal];
s10 -> s11 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s3 [fontname="Times-Italic", label="&epsilon;"];
}
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (tokens { A B C) (RULES (RULE a (BLOCK (ALT x B))) (RULE b (BLOCK (ALT x C))) (RULE x (BLOCK (ALT A) (ALT EPSILON)))))
[1, -1]
[2, -1]
[3, -1]
[3, -1]
[6, 1, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e A) (ALT e A B))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="{&rarr;\n11\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s12[fontsize=11,label="&larr;\n12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s11:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s12 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s10 -> s12 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="17", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="{&rarr;\n18\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s19[fontsize=11,label="&larr;\n19", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s18 [fontname="Times-Italic", label="&epsilon;"];
s18:p0 -> s13 [fontname="Times-Italic", label="&epsilon;"];
s18:p1 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s17 -> s19 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s19 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s15 -> s16 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s16 -> s19 [fontname="Times-Italic", label="&epsilon;"];
}
[6, 1, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e A) (ALT e A B))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="{&rarr;\n11\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s12[fontsize=11,label="&larr;\n12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s11:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s12 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s10 -> s12 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="17", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="{&rarr;\n18\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s19[fontsize=11,label="&larr;\n19", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s18 [fontname="Times-Italic", label="&epsilon;"];
s18:p0 -> s13 [fontname="Times-Italic", label="&epsilon;"];
s18:p1 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s17 -> s19 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s19 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s15 -> s16 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s16 -> s19 [fontname="Times-Italic", label="&epsilon;"];
}
[4, 4, 6, 5, 5, 1, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e A) (ALT e A B))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="{&rarr;\n11\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s12[fontsize=11,label="&larr;\n12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s11:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s12 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s10 -> s12 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="17", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="{&rarr;\n18\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s19[fontsize=11,label="&larr;\n19", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s18 [fontname="Times-Italic", label="&epsilon;"];
s18:p0 -> s13 [fontname="Times-Italic", label="&epsilon;"];
s18:p1 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s17 -> s19 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s19 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s15 -> s16 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s16 -> s19 [fontname="Times-Italic", label="&epsilon;"];
}
[4, 4, 6, 5, 5, 1, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e A) (ALT e A B))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="{&rarr;\n11\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s12[fontsize=11,label="&larr;\n12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s11:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s12 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s10 -> s12 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="17", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="{&rarr;\n18\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s19[fontsize=11,label="&larr;\n19", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s18 [fontname="Times-Italic", label="&epsilon;"];
s18:p0 -> s13 [fontname="Times-Italic", label="&epsilon;"];
s18:p1 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s17 -> s19 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s19 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s15 -> s16 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s16 -> s19 [fontname="Times-Italic", label="&epsilon;"];
}
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e A) (ALT e A B))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
[6, 1, -1]
[6, 1, 2, -1]
[4, 4, 6, 5, 5, 1, -1]
[4, 4, 6, 5, 5, 1, 2, -1]
[1, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A {;}) (ALT B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s3 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "action_0:-1", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A {;}) (ALT B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s3 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "action_0:-1", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A {;}) (ALT B)))))
[1, -1]
[2, -1]
[1, -1]
[1, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT EPSILON)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="{&rarr;\n4\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s5[fontsize=11,label="&larr;\n5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s4:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s4:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[-1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT EPSILON)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="{&rarr;\n4\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s5[fontsize=11,label="&larr;\n5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s4:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s4:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT EPSILON)))))
[1, -1]
[-1]
[1, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT A B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[1, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT A B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[1, 2, 3, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT A B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT A B)))))
[1, -1]
[1, 2, -1]
[1, 2, 3, -1]
[1, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT x) (ALT y))) (RULE x (BLOCK (ALT A))) (RULE y (BLOCK (ALT B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<x>", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<y>", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT x) (ALT y))) (RULE x (BLOCK (ALT A))) (RULE y (BLOCK (ALT B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<x>", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<y>", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT x) (ALT y))) (RULE x (BLOCK (ALT A))) (RULE y (BLOCK (ALT B)))))
[1, -1]
[2, -1]
[1, -1]
[1, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT A) (ALT A B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s6:p2 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[1, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT A) (ALT A B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s6:p2 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT A) (ALT A B)))))
[1, -1]
[1, 2, -1]
[1, 2, -1]
[1, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A B) (ALT A B) (ALT A B C)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 3, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A B) (ALT A B) (ALT A B C)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A B) (ALT A B) (ALT A B C)))))
[1, 2, -1]
[1, 2, 3, -1]
[1, 2, -1]
[6, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e B) (ALT e C))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
[6, 3, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e B) (ALT e C))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
[4, 4, 6, 5, 5, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e B) (ALT e C))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
[4, 4, 6, 5, 5, 3, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e B) (ALT e C))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e B) (ALT e C))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
[6, 2, -1]
[6, 3, -1]
[4, 4, 6, 5, 5, 2, -1]
[4, 4, 6, 5, 5, 3, -1]
[1, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE ID (BLOCK (ALT (.. 'a' 'z')))) (RULE SEMI (BLOCK (ALT ';'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { ID SEMI INT) (RULES (RULE a (BLOCK (ALT (BLOCK (ALT ID) (ALT ID (? (BLOCK (ALT ID))))) SEMI)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="{&rarr;\n7\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s8[fontsize=11,label="&larr;\n8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s7:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s3 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s8 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "SEMI", arrowhead = normal];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s6 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 1, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE ID (BLOCK (ALT (.. 'a' 'z')))) (RULE SEMI (BLOCK (ALT ';'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { ID SEMI INT) (RULES (RULE a (BLOCK (ALT (BLOCK (ALT ID) (ALT ID (? (BLOCK (ALT ID))))) SEMI)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="{&rarr;\n7\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s8[fontsize=11,label="&larr;\n8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s7:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s3 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s8 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "SEMI", arrowhead = normal];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s6 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, -1]
(LEXER_GRAMMAR L (RULES (RULE ID (BLOCK (ALT (.. 'a' 'z')))) (RULE SEMI (BLOCK (ALT ';'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { ID SEMI INT) (RULES (RULE a (BLOCK (ALT ID) (ALT ID) (ALT ID SEMI)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s6:p2 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "SEMI", arrowhead = normal];
}
[1, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE ID (BLOCK (ALT (.. 'a' 'z')))) (RULE SEMI (BLOCK (ALT ';'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { ID SEMI INT) (RULES (RULE a (BLOCK (ALT ID) (ALT ID) (ALT ID SEMI)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s6:p2 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "SEMI", arrowhead = normal];
}
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.078 sec - in org.antlr.v4.test.TestATNParserPrediction
Running org.antlr.v4.test.TestParseErrors
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443834361
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443834481
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443834600
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443834697
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443834811
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443834913
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443835024
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443835148
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443835255
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443835361
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443835456
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443835456
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443835456
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443835456
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443835863
grammar T;
a : 'a' 'b'* 'c'  | 'a' 'b' 'd'  ;
q : 'e' ;

dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443835961
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443836061
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443836156
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443836263
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443836369
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443836472
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443836574
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443836679
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443836778
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443836871
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443836979
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751443837090
Tests run: 24, Failures: 5, Errors: 0, Skipped: 0, Time elapsed: 2.821 sec <<< FAILURE! - in org.antlr.v4.test.TestParseErrors
testConjuringUpTokenFromSet(org.antlr.v4.test.TestParseErrors)  Time elapsed: 0.119 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...-1='<missing 'b'>',<[1]>,1:1]
> but was:<...-1='<missing 'b'>',<[2]>,1:1]
>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestParseErrors.testConjuringUpTokenFromSet(TestParseErrors.java:105)

testMultiTokenDeletionBeforeLoop2(org.antlr.v4.test.TestParseErrors)  Time elapsed: 0.107 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...a' expecting {'b', '[z', 'c]'}
> but was:<...a' expecting {'b', '[c', 'z]'}
>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestParseErrors.testMultiTokenDeletionBeforeLoop2(TestParseErrors.java:215)

testSingleTokenDeletionDuringLoop2(org.antlr.v4.test.TestParseErrors)  Time elapsed: 0.106 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...a' expecting {'b', '[z', 'c]'}
> but was:<...a' expecting {'b', '[c', 'z]'}
>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestParseErrors.testSingleTokenDeletionDuringLoop2(TestParseErrors.java:225)

testMultiTokenDeletionDuringLoop2(org.antlr.v4.test.TestParseErrors)  Time elapsed: 0.095 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...a' expecting {'b', '[z', 'c'}
line 1:6 extraneous input 'a' expecting {'b', 'z', 'c]'}
> but was:<...a' expecting {'b', '[c', 'z'}
line 1:6 extraneous input 'a' expecting {'b', 'c', 'z]'}
>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestParseErrors.testMultiTokenDeletionDuringLoop2(TestParseErrors.java:237)

testConjuringUpToken(org.antlr.v4.test.TestParseErrors)  Time elapsed: 0.102 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...-1='<missing 'b'>',<[1]>,1:1]
> but was:<...-1='<missing 'b'>',<[2]>,1:1]
>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestParseErrors.testConjuringUpToken(TestParseErrors.java:86)

Running org.antlr.v4.test.TestATNLexerInterpreter
null
[A, EOF]
null
[B, EOF]
null
[CMT, EOF]
null
[CMT, EOF]
null
[KEND, EOF]
null
[ID, EOF]
null
[ID, WS, KEND, WS, ID, EOF]
null
[CMT, WS, CMT, WS, EOF]
null
[CMT, EOF]
null
[CMT, CMT, EOF]
null
[CMT, EOF]
null
[CMT, CMT, EOF]
null
[A, B, A, B, EOF]
null
[A, EOF]
null
[A, EOF]
null
[A, EOF]
null
[A, EOF]
null
[A, EOF]
null
[A, EOF]
null
[A, EOF]
null
[A, EOF]
null
[ID, INT, ID, INT, EOF]
null
[ID, EOF]
null
[INT, WS, INT, EOF]
null
[CMT, WS, CMT, EOF]
null
[STR, EOF]
null
[STR, EOF]
null
[B, EOF]
null
[A, B, EOF]
null
[CMT, EOF]
null
[CMT, EOF]
null
[B, EOF]
null
[A, EOF]
null
[A, DONE, EOF]
Tests run: 26, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.059 sec - in org.antlr.v4.test.TestATNLexerInterpreter
Running org.antlr.v4.test.TestFastQueue
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - in org.antlr.v4.test.TestFastQueue
Running org.antlr.v4.test.TestBasicSemanticErrors
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestBasicSemanticErrors-1751443837246
!!!
grammar:
grammar T;
ss[int expr] returns [int expr]
locals [int expr]
  : expr=expr EOF;
expr : '=';

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestBasicSemanticErrors-1751443837251
!!!
grammar:
parser grammar U;
options { foo=bar; k=3;}
tokens {
        ID,
        f,
        S
}
tokens { A }
options { x=y; }

a
options { blech=bar; greedy=true; }
        :       ID
        ;
b : ( options { ick=bar; greedy=true; } : ID )+ ;
c : ID<blue> ID<x=y> ;
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestBasicSemanticErrors-1751443837253
!!!
grammar:
grammar T;
ss : op=('=' | '+=' | expr) EOF;
expr : '=' '=';

###
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec - in org.antlr.v4.test.TestBasicSemanticErrors
Running org.antlr.v4.test.TestAttributeChecks
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837260
!!!
grammar:
parser grammar A;
@members {$a}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837260
!!!
grammar:
parser grammar A;
@members {$a.y}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837262
!!!
grammar:
parser grammar A;
@members {$S}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837262
!!!
grammar:
parser grammar A;
@members {$S::i}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837262
!!!
grammar:
parser grammar A;
@members {$S::i=$S::i}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837262
!!!
grammar:
parser grammar A;
@members {$b::f}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837262
!!!
grammar:
parser grammar A;
@members {$S::j}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837262
!!!
grammar:
parser grammar A;
@members {$S::j = 3;}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837262
!!!
grammar:
parser grammar A;
@members {$S::j = $S::k;}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837267
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837267
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837267
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837267
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837267
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837267
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837267
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837267
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {$c}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837267
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {$a.q}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837294
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {$a}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837294
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {$b}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837294
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {$lab}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837294
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {$b::f}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837294
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {$S::i}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837294
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {$S::i=$S::i}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837294
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {$a::z}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837294
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {$S}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837294
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {$S::j}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837294
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {$S::j = 3;}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837294
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {$S::j = $S::k;}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837299
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837299
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837299
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837299
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837299
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837299
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837299
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837299
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837299
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837299
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837299
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837299
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837299
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837299
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837299
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837299
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $a
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $b
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $lab
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $b::f
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $S::i
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $S::i=$S::i
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $a::z
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $S::j
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $S::j = 3;
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $S::j = $S::k;
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $Q[-1]::y
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $Q[-i]::y
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $Q[i]::y
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $Q[0]::y
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $Q[-1]::y = 23;
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $Q[-i]::y = 23;
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $Q[i]::y = 23;
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $Q[0]::y = 23;
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $S[-1]::y
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $S[-i]::y
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $S[i]::y
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $S[0]::y
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $S[-1]::y = 23;
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $S[-i]::y = 23;
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $S[i]::y = 23;
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $S[0]::y = 23;
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837356
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $S[$S::y]::i
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837368
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $lab
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837368
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $q
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837368
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $q.y
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837368
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $q = 3
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837368
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $q = 3;
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837368
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $q.y = 3;
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837368
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $q = $blort;
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837368
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $a.ick
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837368
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $a.ick = 3;
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837368
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $b.d
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837368
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $d.text
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837368
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $lab.d
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837368
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $ids = null;
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837368
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 $labs = null;
		 }
		 c
    ;
    finally {}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$lab}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$q}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$q.y}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$q = 3}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$q = 3;}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$q.y = 3;}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$q = $blort;}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$a.ick}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$a.ick = 3;}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$b.e}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$b.d}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$c.text}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837375
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$lab.d}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837426
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$a}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837426
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$b}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837426
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$lab}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837426
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$b::f}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837426
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$S}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837426
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$S::i}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837426
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$S::i=$S::i}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837426
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$a::z}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837426
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$S::j}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837426
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$S::j = 3;}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837426
!!!
grammar:
parser grammar A;
@members {}
tokens{ID}
a[int x] returns [int y]
@init {}
    :   id=ID ids+=ID lab=b[34] labs+=b[34] {
		 }
		 c
    ;
    finally {$S::j = $S::k;}
b[int d] returns [int e]
    :   {}
    ;
c   :   ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestAttributeChecks-1751443837431
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.176 sec - in org.antlr.v4.test.TestAttributeChecks
Running org.antlr.v4.test.TestCommonTokenStream
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec - in org.antlr.v4.test.TestCommonTokenStream
Running org.antlr.v4.test.TestTopologicalSort
Tests run: 5, Failures: 3, Errors: 0, Skipped: 0, Time elapsed: 0 sec <<< FAILURE! - in org.antlr.v4.test.TestTopologicalSort
testFairlyLargeGraph(org.antlr.v4.test.TestTopologicalSort)  Time elapsed: 0 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<[H, F, E, D, [G, A, B], C]> but was:<[H, F, E, D, [A, B, G], C]>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestTopologicalSort.testFairlyLargeGraph(TestTopologicalSort.java:59)

testSimpleTokenDependence(org.antlr.v4.test.TestTopologicalSort)  Time elapsed: 0 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...va.g4, Java.tokens, [Ref.g4, D]ef.g4]> but was:<...va.g4, Java.tokens, [Def.g4, R]ef.g4]>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestTopologicalSort.testSimpleTokenDependence(TestTopologicalSort.java:101)

testParserLexerCombo(org.antlr.v4.test.TestTopologicalSort)  Time elapsed: 0 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...ens, JavaParser.g4, [Ref.g4, D]ef.g4]> but was:<...ens, JavaParser.g4, [Def.g4, R]ef.g4]>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestTopologicalSort.testParserLexerCombo(TestTopologicalSort.java:115)

Running org.antlr.v4.test.TestLexerErrors
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751443837449
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751443837449
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751443837636
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751443837636
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751443837822
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751443837904
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751443837990
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751443838080
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751443838168
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751443838254
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751443838345
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751443838435
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.071 sec - in org.antlr.v4.test.TestLexerErrors
Running org.antlr.v4.test.TestLexerExec
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443838520
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443838613
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443838703
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443838703
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443838885
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443838885
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443839134
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443839213
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443839304
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443839382
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443839382
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443839558
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443839644
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443839736
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443839828
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443839918
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443839994
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443840083
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443840173
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443840265
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443840353
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443840429
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443840505
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443840598
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443840687
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443840764
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443840850
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443840939
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443841031
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443841124
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443841201
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443841294
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443841372
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443841462
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443841540
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443841632
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751443841730
Tests run: 34, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.524 sec - in org.antlr.v4.test.TestLexerExec
Running org.antlr.v4.test.TestTokenStreamRewriter
Tests run: 40, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.072 sec - in org.antlr.v4.test.TestTokenStreamRewriter
Running org.antlr.v4.test.TestATNDeserialization
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 sec - in org.antlr.v4.test.TestATNDeserialization
Running org.antlr.v4.test.TestToolSyntaxErrors
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842139
!!!
grammar:
grammar A;
a : 'x
  ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842145
!!!
grammar:
grammar A;
_a : 'x' ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842146
!!!
grammar:
grammar A;
tokens{Foo}
b : Foo ;
X : 'foo' -> popMode(Foo);
Y : 'foo' -> type;
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842151
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842158
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842165
!!!
grammar:
lexer grammar A;
WHITESPACE : (" " | "\t" | "\n" | "\r" | "\f");

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842165
!!!
grammar:
grammar A;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842165
!!!
grammar:
A;
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842165
!!!
grammar:
grammar ;
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842165
!!!
grammar:
grammar A
a : ID ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842165
!!!
grammar:
grammar A;
a : ID ;;
b : B ;
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842165
!!!
grammar:
grammar A;;
a : ID ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842165
!!!
grammar:
grammar A;
a @init : ID ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842165
!!!
grammar:
grammar A;
a  ( A | B ) D ;
b : B ;
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842169
!!!
grammar:
grammar A;
a : : A ;
b : B ;
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842169
!!!
grammar:
grammar A;
a : A 
b : B ;
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842170
!!!
grammar:
lexer grammar A;
A : 'a' 
B : 'b' ;
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842171
!!!
grammar:
grammar A;
a : A 
b[int i] returns [int y] : B ;
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842171
!!!
grammar:
grammar A;
a : b 
  catch [Exception e] {...}
b : B ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842172
!!!
grammar:
grammar A;
a : A 
  catch [Exception e] {...}

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842172
!!!
grammar:
grammar A;
a @ options {k=1;} : A ;
b : B ;
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842173
!!!
grammar:
grammar A;
a } : A ;
b : B ;
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842174
!!!
grammar:
grammar A;
a : A ;
mode foo;
b : B ;
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842174
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842191
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842198
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842206
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842212
!!!
grammar:
grammar A;
tokens{Foo}
b : Foo ;
X : 'foo' -> popmode;
Y : 'foo' -> token(Foo);
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842217
!!!
grammar:
grammar Oops;

ret_ty : A ;
ret_ty : B ;

A : 'a' ;
B : 'b' ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestToolSyntaxErrors-1751443842221
!!!
grammar:
grammar A;
x : ;
y1 : x+;
y2 : x*;
z1 : ('foo' | 'bar'? 'bar2'?)*;
z2 : ('foo' | 'bar' 'bar2'? | 'bar2')*;

###
Tests run: 23, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.087 sec - in org.antlr.v4.test.TestToolSyntaxErrors
Running org.antlr.v4.test.TestParserInterpreter
parse tree: (s a)
parse tree: (s (t a) c)
parse tree: (s (t b) c)
parse tree: (s (t (u a)) c)
parse tree: (s (t (u b)) c)
parse tree: (s b)
parse tree: (s a b)
parse tree: (s a a a a a a b)
parse tree: (s a)
parse tree: (s b)
parse tree: (s b)
parse tree: (s a b)
parse tree: (s c)
parse tree: (s a c)
parse tree: (s b c)
parse tree: (s c)
parse tree: (s a c)
parse tree: (s b c)
parse tree: (s a b a a a b c)
parse tree: (s b a b a c)
parse tree: (s (e a))
parse tree: (s (e (e a) + (e a)))
parse tree: (s (e (e a) * (e a)))
parse tree: (s (e (e (e a) + (e a)) + (e a)))
parse tree: (s (e (e (e a) * (e a)) + (e a)))
parse tree: (s (e (e a) + (e (e a) * (e a))))
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 sec - in org.antlr.v4.test.TestParserInterpreter
Running org.antlr.v4.test.TestATNSerialization
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "~A", arrowhead = normal];
s3 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
Tests run: 22, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.026 sec - in org.antlr.v4.test.TestATNSerialization
Running org.antlr.v4.test.TestParseTrees
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTrees-1751443842276
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTrees-1751443842394
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTrees-1751443842499
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTrees-1751443842611
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTrees-1751443842704
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTrees-1751443842814
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTrees-1751443842927
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTrees-1751443843022
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.838 sec - in org.antlr.v4.test.TestParseTrees
Running org.antlr.v4.test.TestATNConstruction
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s4 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "D", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<b>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s3 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s3 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="&rarr;\n3+", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{5+\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s3 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="&rarr;\n3*", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{5*\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7*", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7 -> s5 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "action_0:-1", arrowhead = normal];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "{A, B}", arrowhead = normal];
s3 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "{'b', A}", arrowhead = normal];
s3 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="{&rarr;\n4\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s5[fontsize=11,label="&larr;\n5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s4:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s4:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="{&rarr;\n3\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s3:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s3:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s5:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "action_0:-1", arrowhead = normal];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="{&rarr;\n3\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s3:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s3:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "{A, B}", arrowhead = normal];
s4 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "{A, B}", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s4 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5+\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="{7+\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "action_0:-1", arrowhead = normal];
s7:p0 -> s5 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s7:p1 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5+\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="{7+\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s5:p2 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s4 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7:p0 -> s5 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s7:p1 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="&rarr;\n4*", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="&larr;\n5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{6*\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8*", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="&rarr;\n9*", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="{11*\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13*", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11:p0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s11:p1 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "COMMA", arrowhead = normal];
s6:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s7 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s10 -> s13 [fontname="Times-Italic", label="&epsilon;"];
s5 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s13 -> s11 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s8 -> s6 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5*\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="{7*\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9*", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7:p0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s7:p1 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "action_0:-1", arrowhead = normal];
s9 -> s7 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "pred_0:0", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "pred_0:1", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 sec - in org.antlr.v4.test.TestATNConstruction
Running org.antlr.v4.test.TestIntervalSet
Tests run: 39, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - in org.antlr.v4.test.TestIntervalSet
Running org.antlr.v4.test.TestASTStructure
Tests run: 41, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec - in org.antlr.v4.test.TestASTStructure
Running org.antlr.v4.test.TestActionSplitter
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - in org.antlr.v4.test.TestActionSplitter
Running org.antlr.v4.test.TestParserExec
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443843149
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443843149
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443843347
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443843446
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443843551
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443843647
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443843647
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443843855
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443843946
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443844041
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443844151
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443844243
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443844334
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443844334
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443844520
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443844520
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443844697
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443844787
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443844787
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443844986
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443844986
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443844986
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443844986
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443845357
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751443845450
Tests run: 18, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 2.391 sec - in org.antlr.v4.test.TestParserExec
Running org.antlr.v4.test.TestSets
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751443845541
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751443845643
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751443845749
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444832395
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444832578
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444832692
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444832794
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444832903
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444833018
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444833108
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444833108
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444833273
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444833362
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444833461
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444833558
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444833659
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444833746
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444833851
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444833943
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444834042
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444834140
!!!
grammar:
grammar T;
a : A {System.out.println($A.text);} ;
A : ~('a'|B) ;
B : 'b' ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444834146
!!!
grammar:
grammar T;
a : A {System.out.println($A.text);} ;
A : ~('a'|'aa') ;
B : 'b' ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444834151
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751444834249
Tests run: 23, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 988.796 sec - in org.antlr.v4.test.TestSets
Running org.antlr.v4.test.TestTokenTypeAssignment
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec - in org.antlr.v4.test.TestTokenTypeAssignment
Running org.antlr.v4.test.TestFullContextParsing
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751444834351
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751444834461
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751444834573
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751444834573
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751444834573
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751444834573
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751444834573
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751444834573
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751444835166
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751444835282
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751444835282
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751444835483
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751444835585
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751444835702
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751444835702
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.556 sec - in org.antlr.v4.test.TestFullContextParsing
Running org.antlr.v4.test.TestPerformance
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestPerformance-1751444835908
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestPerformance-1751444835908
Tests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.212 sec <<< FAILURE! - in org.antlr.v4.test.TestPerformance
compileJdk(org.antlr.v4.test.TestPerformance)  Time elapsed: 0 sec  <<< FAILURE!
java.lang.AssertionError: The JDK_SOURCE_ROOT environment variable must be set for performance testing.
	at org.junit.Assert.fail(Assert.java:93)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.antlr.v4.test.TestPerformance.compileJdk(TestPerformance.java:411)

Running org.antlr.v4.test.TestLexerActions
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerActions-1751444836120
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerActions-1751444836196
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerActions-1751444836271
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerActions-1751444836356
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerActions-1751444836446
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerActions-1751444836522
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerActions-1751444836612
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerActions-1751444836688
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerActions-1751444836777
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerActions-1751444836864
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerActions-1751444836956
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerActions-1751444837047
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerActions-1751444837134
Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.103 sec - in org.antlr.v4.test.TestLexerActions
Running org.antlr.v4.test.TestATNInterpreter
[1, -1]
input=[1, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[1, 3, -1]
input=[1, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[1, -1]
input=[1, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 3, -1]
input=[1, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, -1]
input=[1, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 4, -1]
input=[1, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 4, -1]
input=[1, 2, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 3, 4, -1]
input=[1, 2, 3, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, -1]
input=[1, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s11 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s11 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s11 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 4, -1]
input=[1, 2, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s11 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, -1]
input=[1, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 4, -1]
input=[1, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 4, -1]
input=[1, 2, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 3, 4, -1]
input=[1, 2, 3, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, -1]
input=[1, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s11 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s11 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s11 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 4, -1]
input=[1, 2, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s11 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 3, 4, -1]
input=[1, 2, 3, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 4, -1]
input=[1, 2, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="{&rarr;\n7\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s8[fontsize=11,label="&larr;\n8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s7:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s7:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s3 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "D", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 4, 3, -1]
input=[1, 2, 4, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="{&rarr;\n7\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s8[fontsize=11,label="&larr;\n8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s7:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s7:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s3 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "D", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[3, 4, -1]
input=[3, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="{&rarr;\n7\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s8[fontsize=11,label="&larr;\n8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s7:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s7:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s3 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "D", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s12 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s12 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s12 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s12 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 4, -1]
input=[1, 2, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s12 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s12 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[2, -1]
input=[2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "~A", arrowhead = normal];
s3 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, -1]
input=[1, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[6, 2, -1]
input=[6, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
[6, 3, -1]
input=[6, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
[4, 6, 5, 2, -1]
input=[4, 6, 5, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
[4, 6, 5, 3, -1]
input=[4, 6, 5, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
[4, 4, 6, 5, 5, 2, -1]
input=[4, 4, 6, 5, 5, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
[4, 4, 6, 5, 5, 3, -1]
input=[4, 4, 6, 5, 5, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s4 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="&rarr;\n3+", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{5+\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s3 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 1, 2, -1]
input=[1, 1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="&rarr;\n3+", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{5+\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s3 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 1, 1, 1, 1, 1, 2, -1]
input=[1, 1, 1, 1, 1, 1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="&rarr;\n3+", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{5+\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s3 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 1, 2, 4, -1]
input=[1, 1, 2, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="&rarr;\n3+", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{5+\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s3 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 4, -1]
input=[1, 2, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 3, 4, -1]
input=[1, 2, 3, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 3, -1]
input=[1, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 1, 3, -1]
input=[1, 1, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="&rarr;\n3+", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{5+\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="&rarr;\n9+", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="{11+\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="{&rarr;\n14\nd=2|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s15[fontsize=11,label="&larr;\n15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s14 [fontname="Times-Italic", label="&epsilon;"];
s14:p0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14:p1 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s10 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s3 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s11:p0 -> s9 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s11:p1 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontname="Times-Italic", label="&epsilon;"];
s7 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s13 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s15 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.053 sec - in org.antlr.v4.test.TestATNInterpreter
Running org.antlr.v4.test.TestScopeParsing
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec - in org.antlr.v4.test.TestScopeParsing
Running org.antlr.v4.test.TestCompositeGrammars
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751444837276
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751444837382
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751444837484
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445734476
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445734485
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445734590
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445734704
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445734816
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445734920
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445735024
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445735130
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445735242
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445735341
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445735446
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445735523
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445735603
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445735704
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445735788
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445735875
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445735889
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445735904
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751445735921
Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 898.743 sec - in org.antlr.v4.test.TestCompositeGrammars
Running org.antlr.v4.test.TestUnbufferedCharStream
Tests run: 22, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec - in org.antlr.v4.test.TestUnbufferedCharStream
Running org.antlr.v4.test.TestParseTreeMatcher
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736024
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736045
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736063
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736082
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736101
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736124
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736142
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736165
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736183
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736201
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736218
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736235
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736251
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736271
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736271
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736271
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736271
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTreeMatcher-1751445736343
Tests run: 20, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.343 sec <<< FAILURE! - in org.antlr.v4.test.TestParseTreeMatcher
testTokenizingPattern(org.antlr.v4.test.TestParseTreeMatcher)  Time elapsed: 0.018 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...ID:3, [@-1,1:1='=',<[1>,1:1], expr:7, [@-1,1:1=';',<2]>,1:1]]> but was:<...ID:3, [@-1,1:1='=',<[2>,1:1], expr:7, [@-1,1:1=';',<1]>,1:1]]>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestParseTreeMatcher.testTokenizingPattern(TestParseTreeMatcher.java:100)

Running org.antlr.v4.test.TestLeftRecursion
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751445736367
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751445736367
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751445736367
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751445736640
4 -> 4
1+2 -> 3
1+2*3 -> 7
i++*3 -> 12
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751445736935
a -> a
a+b -> (a+b)
a=b+c -> ((a=b)+c)
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751445737149
!!!
grammar:
grammar T;
s @after {System.out.println($ctx.toStringTree(this));} : a ;
a : a ID
  ;
ID : 'a'..'z'+ ;
WS : (' '|'\n') -> skip ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751445737155
!!!
grammar:
grammar T;
s @after {System.out.println($ctx.toStringTree(this));} : a ;
a : a ID?
  | ID
  ;
ID : 'a'..'z'+ ;
WS : (' '|'\n') -> skip ;

###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751445737161
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751445737161
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751445737161
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751445737422
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751445737511
a -> (s (e a) <EOF>)
a+b -> (s (e (e a) + (e b)) <EOF>)
a*b -> (s (e (e a) * (e b)) <EOF>)
a?b:c -> (s (e (e a) ? (e b) : (e c)) <EOF>)
a=b=c -> (s (e (e a) = (e (e b) = (e c))) <EOF>)
a?b+c:d -> (s (e (e a) ? (e (e b) + (e c)) : (e d)) <EOF>)
a?b=c:d -> (s (e (e a) ? (e (e b) = (e c)) : (e d)) <EOF>)
a? b?c:d : e -> (s (e (e a) ? (e (e b) ? (e c) : (e d)) : (e e)) <EOF>)
a?b: c?d:e -> (s (e (e a) ? (e b) : (e (e c) ? (e d) : (e e))) <EOF>)
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751445738095
a -> (s (e a) <EOF>)
1 -> (s (e 1) <EOF>)
a-1 -> (s (e (e a) - (e 1)) <EOF>)
a.b -> (s (e (e a) . b) <EOF>)
a.this -> (s (e (e a) . this) <EOF>)
-a -> (s (e - (e a)) <EOF>)
-a+b -> (s (e (e - (e a)) + (e b)) <EOF>)
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751445738595
a|b&c -> (s (e (e a) | (e (e b) & (e c))) <EOF>)
(a|b)&c -> (s (e (e ( (e (e a) | (e b)) )) & (e c)) <EOF>)
a > b -> (s (e (e a) > (e b)) <EOF>)
a >> b -> (s (e (e a) >> (e b)) <EOF>)
a=b=c -> (s (e (e a) = (e (e b) = (e c))) <EOF>)
a^b^c -> (s (e (e a) ^ (e (e b) ^ (e c))) <EOF>)
(T)x -> (s (e ( (type T) ) (e x)) <EOF>)
new A().b -> (s (e (e new (type A) ( )) . b) <EOF>)
(T)t.f() -> (s (e (e ( (type T) ) (e (e t) . f)) ( )) <EOF>)
a.f(x)==T.c -> (s (e (e (e (e a) . f) ( (expressionList (e x)) )) == (e (e T) . c)) <EOF>)
a.f().g(x,1) -> (s (e (e (e (e (e a) . f) ( )) . g) ( (expressionList (e x) , (e 1)) )) <EOF>)
new T[((n-1) * x) + 1] -> (s (e new (type T) [ (e (e ( (e (e ( (e (e n) - (e 1)) )) * (e x)) )) + (e 1)) ]) <EOF>)
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751445739564
a -> (s (declarator a) <EOF>)
*a -> (s (declarator * (declarator a)) <EOF>)
**a -> (s (declarator * (declarator * (declarator a))) <EOF>)
a[3] -> (s (declarator (declarator a) [ (e 3) ]) <EOF>)
b[] -> (s (declarator (declarator b) [ ]) <EOF>)
(a) -> (s (declarator ( (declarator a) )) <EOF>)
a[]() -> (s (declarator (declarator (declarator a) [ ]) ( )) <EOF>)
a[][] -> (s (declarator (declarator (declarator a) [ ]) [ ]) <EOF>)
*a[] -> (s (declarator * (declarator (declarator a) [ ])) <EOF>)
(*a)[] -> (s (declarator (declarator ( (declarator * (declarator a)) )) [ ]) <EOF>)
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751446757140
4 -> 4
1+2 -> 3
1+2*3 -> 7
(1+2)*3 -> 9
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751446757415
4 -> (s (e 4))
1*2/3 -> (s (e (e (e 1) * (e 2)) / (e 3)))
(1/2)*3 -> (s (e (e ( (e (e 1) / (e 2)) )) * (e 3)))
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751446757627
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751446757627
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751446757627
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751446757627
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751446757627
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751446758139
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751446758139
Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1,021.998 sec - in org.antlr.v4.test.TestLeftRecursion
Running org.antlr.v4.test.TestUnbufferedTokenStream
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec - in org.antlr.v4.test.TestUnbufferedTokenStream
Running org.antlr.v4.test.TestBufferedTokenStream
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec - in org.antlr.v4.test.TestBufferedTokenStream
Running org.antlr.v4.test.TestGraphNodes
digraph G {
rankdir=LR;
  s0[label="*"];
}

digraph G {
rankdir=LR;
  s0[label="*"];
}

digraph G {
rankdir=LR;
  s0[label="*"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[label="*"];
  s0->s1[label="1"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[label="*"];
  s0->s1[label="1"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s1[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[label="1"];
  s2[label="*"];
  s0->s1[label="1"];
  s1->s2[label="9"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s1[label="1"];
  s2[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
  s1->s2[label="9"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s2[label="2"];
  s3[label="*"];
  s1[label="1"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="2"];
  s2->s3[label="10"];
  s1->s3[label="9"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s2[label="2"];
  s1[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="2"];
  s2->s1[label="9"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[label="*"];
  s0->s1[label="1"];
}

digraph G {
rankdir=LR;
  s0[label="$"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>$"];
  s1[label="$"];
  s0:p0->s1[label="9"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>$"];
  s1[label="$"];
  s0:p0->s1[label="9"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[shape=record, label="<p0>|<p1>$"];
  s2[label="$"];
  s0->s1[label="1"];
  s1:p0->s2[label="9"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[label="*"];
  s0->s1[label="1"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>$"];
  s1[shape=record, label="<p0>|<p1>$"];
  s2[label="$"];
  s0:p0->s1[label="8"];
  s1:p0->s2[label="8"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[shape=record, label="<p0>|<p1>$"];
  s2[label="$"];
  s0->s1[label="1"];
  s1:p0->s2[label="9"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[label="1"];
  s2[label="*"];
  s0->s1[label="1"];
  s1->s2[label="9"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[label="1"];
  s2[label="2"];
  s3[label="*"];
  s0->s1[label="1"];
  s1->s2[label="2"];
  s2->s3[label="9"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[shape=record, label="<p0>|<p1>"];
  s2[label="2"];
  s3[label="*"];
  s0->s1[label="1"];
  s1:p0->s2[label="2"];
  s1:p1->s2[label="3"];
  s2->s3[label="9"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s1[label="1"];
  s2[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
  s1->s2[label="9"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s2[label="2"];
  s1[label="$"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="2"];
  s2->s1[label="9"];
}

digraph G {
rankdir=LR;
  s0[label="$"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>"];
  s1[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
  s0:p2->s1[label="3"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>"];
  s1[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
  s0:p2->s1[label="3"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>"];
  s1[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
  s0:p2->s1[label="3"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s1[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s1[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s2[label="2"];
  s3[label="*"];
  s1[label="1"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="2"];
  s2->s3[label="10"];
  s1->s3[label="9"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[shape=record, label="<p0>|<p1>"];
  s2[label="*"];
  s0->s1[label="1"];
  s1:p0->s2[label="9"];
  s1:p1->s2[label="10"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>"];
  s2[label="*"];
  s1[shape=record, label="<p0>|<p1>"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="3"];
  s0:p2->s2[label="4"];
  s1:p0->s2[label="9"];
  s1:p1->s2[label="10"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>|<p3>"];
  s4[label="4"];
  s5[label="*"];
  s3[label="3"];
  s2[label="2"];
  s1[label="1"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="2"];
  s0:p2->s3[label="3"];
  s0:p3->s4[label="4"];
  s4->s5[label="9"];
  s3->s5[label="8"];
  s2->s5[label="7"];
  s1->s5[label="6"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>"];
  s3[label="3"];
  s4[label="*"];
  s2[label="2"];
  s1[label="1"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="2"];
  s0:p2->s3[label="4"];
  s3->s4[label="9"];
  s2->s4[label="7"];
  s1->s4[label="6"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>"];
  s3[label="3"];
  s4[label="*"];
  s2[shape=record, label="<p0>|<p1>"];
  s1[label="1"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="2"];
  s0:p2->s3[label="4"];
  s3->s4[label="9"];
  s2:p0->s4[label="7"];
  s2:p1->s4[label="8"];
  s1->s4[label="6"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>"];
  s2[label="2"];
  s3[label="*"];
  s1[label="1"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="2"];
  s0:p2->s1[label="4"];
  s2->s3[label="7"];
  s1->s3[label="6"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>|<p3>"];
  s1[label="1"];
  s2[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
  s0:p2->s1[label="3"];
  s0:p3->s1[label="4"];
  s1->s2[label="6"];
}

Tests run: 38, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.001 sec - in org.antlr.v4.test.TestGraphNodes
Running org.antlr.v4.test.TestSemPredEvalParser
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446758386
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446758477
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446758566
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446758665
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446758753
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446758843
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446758931
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446759020
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446759108
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446759197
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446759285
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446759285
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446759453
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446759539
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446759625
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446759713
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446759801
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446759888
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446759976
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446760066
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446760151
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446760254
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446760352
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751446760438
Tests run: 23, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.142 sec - in org.antlr.v4.test.TestSemPredEvalParser
Running org.antlr.v4.test.TestSymbolIssues
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSymbolIssues-1751446760528
!!!
grammar:
lexer grammar L;
A : 'a';
mode X;
fragment B : 'b';
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSymbolIssues-1751446760529
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSymbolIssues-1751446760534
!!!
grammar:
grammar A;
options { opt='sss'; k=3; }

@members {foo}
@members {bar}
@lexer::header {package jj;}
@lexer::header {package kk;}

a[int i] returns [foo f] : X ID a[3] b[34] c ;
b returns [int g] : Y 'y' 'if' a ;
c : FJKD ;

ID : 'a'..'z'+ ID ;
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSymbolIssues-1751446760536
!!!
grammar:
parser grammar B;
tokens { ID, FOO, X, Y }

a : s=ID b+=ID X=ID '.' ;

b : x=ID x+=ID ;

s : FOO ;
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSymbolIssues-1751446760537
!!!
grammar:
parser grammar D;
tokens{ID}
a[int j] 
        :       i=ID j=ID ;

b[int i] returns [int i] : ID ;

c[int i] returns [String k]
        :       ID ;
###
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSymbolIssues-1751446760538
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec - in org.antlr.v4.test.TestSymbolIssues

Results :

Failed tests: 
  TestParseErrors.testConjuringUpTokenFromSet:105 expected:<...-1='<missing 'b'>',<[1]>,1:1]
> but was:<...-1='<missing 'b'>',<[2]>,1:1]
>
  TestParseErrors.testMultiTokenDeletionBeforeLoop2:215 expected:<...a' expecting {'b', '[z', 'c]'}
> but was:<...a' expecting {'b', '[c', 'z]'}
>
  TestParseErrors.testSingleTokenDeletionDuringLoop2:225 expected:<...a' expecting {'b', '[z', 'c]'}
> but was:<...a' expecting {'b', '[c', 'z]'}
>
  TestParseErrors.testMultiTokenDeletionDuringLoop2:237 expected:<...a' expecting {'b', '[z', 'c'}
line 1:6 extraneous input 'a' expecting {'b', 'z', 'c]'}
> but was:<...a' expecting {'b', '[c', 'z'}
line 1:6 extraneous input 'a' expecting {'b', 'c', 'z]'}
>
  TestParseErrors.testConjuringUpToken:86 expected:<...-1='<missing 'b'>',<[1]>,1:1]
> but was:<...-1='<missing 'b'>',<[2]>,1:1]
>
  TestTopologicalSort.testFairlyLargeGraph:59 expected:<[H, F, E, D, [G, A, B], C]> but was:<[H, F, E, D, [A, B, G], C]>
  TestTopologicalSort.testSimpleTokenDependence:101 expected:<...va.g4, Java.tokens, [Ref.g4, D]ef.g4]> but was:<...va.g4, Java.tokens, [Def.g4, R]ef.g4]>
  TestTopologicalSort.testParserLexerCombo:115 expected:<...ens, JavaParser.g4, [Ref.g4, D]ef.g4]> but was:<...ens, JavaParser.g4, [Def.g4, R]ef.g4]>
  TestPerformance.compileJdk:411 The JDK_SOURCE_ROOT environment variable must be set for performance testing.
  TestParseTreeMatcher.testTokenizingPattern:100 expected:<...ID:3, [@-1,1:1='=',<[1>,1:1], expr:7, [@-1,1:1=';',<2]>,1:1]]> but was:<...ID:3, [@-1,1:1='=',<[2>,1:1], expr:7, [@-1,1:1=';',<1]>,1:1]]>

Tests run: 726, Failures: 10, Errors: 0, Skipped: 2

[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1mReactor Summary for ANTLR 4 4.2:[m
[[1;34mINFO[m] 
[[1;34mINFO[m] ANTLR 4 ............................................ [1;32mSUCCESS[m [  0.096 s]
[[1;34mINFO[m] ANTLR 4 Runtime Annotations ........................ [1;32mSUCCESS[m [  0.148 s]
[[1;34mINFO[m] ANTLR 4 Runtime .................................... [1;32mSUCCESS[m [  1.015 s]
[[1;34mINFO[m] ANTLR 4 Tool ....................................... [1;31mFAILURE[m [48:49 min]
[[1;34mINFO[m] ANTLR 4 Maven plugin ............................... [1;33mSKIPPED[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;31mBUILD FAILURE[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  48:51 min
[[1;34mINFO[m] Finished at: 2025-07-02T04:59:20-04:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;31mERROR[m] Failed to execute goal [32morg.apache.maven.plugins:maven-surefire-plugin:2.16:test[m [1m(default-test)[m on project [36mantlr4[m: [1;31mThere are test failures.[m
[[1;31mERROR[m] [1;31m[m
[[1;31mERROR[m] [1;31mPlease refer to /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/target/surefire-reports for the individual test results.[m
[[1;31mERROR[m] -> [1m[Help 1][m
[[1;31mERROR[m] 
[[1;31mERROR[m] To see the full stack trace of the errors, re-run Maven with the [1m-e[m switch.
[[1;31mERROR[m] Re-run Maven using the [1m-X[m switch to enable full debug logging.
[[1;31mERROR[m] 
[[1;31mERROR[m] For more information about the errors and possible solutions, please read the following articles:
[[1;31mERROR[m] [1m[Help 1][m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[[1;31mERROR[m] 
[[1;31mERROR[m] After correcting the problems, you can resume the build with the command
[[1;31mERROR[m]   [1mmvn <args> -rf :antlr4[m
