protected int execATN(@NotNull CharStream input, @NotNull DFAState ds0) {\n\tint t = input.LA(1);\n\t@NotNull\n\tDFAState s = ds0;\n\t\n\twhile ( true ) {\n\t\tATNConfigSet closure = s.configs;\n\t\tDFAState target = null;\n\t\t\n\t\tif ( s.edges != null && t >= MIN_DFA_EDGE && t <= MAX_DFA_EDGE ) {\n\t\t\ttarget = s.edges[t - MIN_DFA_EDGE];\n\t\t\t\n\t\t\tif (target == ERROR) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (target == null) {\n\t\t\tATNConfigSet reach = new OrderedATNConfigSet();\n\n\t\t\tgetReachableConfigSet(input, closure, reach, t);\n\t\t\t\n\t\t\tif ( reach.isEmpty() ) {\n\t\t\t\t@NotNull\n\t\t\t\tDFAState from = s != null ? s : addDFAState(closure);\n\t\t\t\t\n\t\t\t\taddDFAEdge(from, t, ERROR);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\ttarget = addDFAEdge(s, t, reach);\n\t\t}\n\t\t\n\t\tif (target.isAcceptState) {\n\t\t\tcaptureSimState(prevAccept, input, target);\n\t\t\t\n\t\t\tif (t == IntStream.EOF) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (t != IntStream.EOF) {\n\t\t\tconsume(input);\n\t\t\tt = input.LA(1);\n\t\t}\n\t\t\n\t\ts = target;\n\t}\n\t\n\treturn failOrAccept(prevAccept, input, s.configs, t);\n}