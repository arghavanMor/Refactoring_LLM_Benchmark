[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1mReactor Build Order:[m
[[1;34mINFO[m] 
[[1;34mINFO[m] ANTLR 4                                                            [pom]
[[1;34mINFO[m] ANTLR 4 Runtime                                                    [jar]
[[1;34mINFO[m] ANTLR 4 Tool                                                       [jar]
[[1;34mINFO[m] ANTLR 4 Maven plugin                                      [maven-plugin]
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m----------------------< [0;36morg.antlr:antlr4-master[0;1m >-----------------------[m
[[1;34mINFO[m] [1mBuilding ANTLR 4 4.0-SNAPSHOT                                      [1/4][m
[[1;34mINFO[m] [1m--------------------------------[ pom ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-enforcer-plugin:1.0:enforce[m [1m(enforce-maven)[m @ [36mantlr4-master[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m----------------------< [0;36morg.antlr:antlr4-runtime[0;1m >----------------------[m
[[1;34mINFO[m] [1mBuilding ANTLR 4 Runtime 4.0-SNAPSHOT                              [2/4][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-enforcer-plugin:1.0:enforce[m [1m(enforce-maven)[m @ [36mantlr4-runtime[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mantlr4-runtime[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /Users/jeancarlorspaul/IdeaProjects/antlr4/runtime/Java/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.0:compile[m [1m(default-compile)[m @ [36mantlr4-runtime[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 123 source files to /Users/jeancarlorspaul/IdeaProjects/antlr4/runtime/Java/target/classes
[[1;33mWARNING[m] bootstrap class path not set in conjunction with -source 6
[[1;33mWARNING[m] source value 6 is obsolete and will be removed in a future release
[[1;33mWARNING[m] target value 1.6 is obsolete and will be removed in a future release
[[1;33mWARNING[m] To suppress warnings about obsolete options, use -Xlint:-options.
[[1;33mWARNING[m] /Users/jeancarlorspaul/IdeaProjects/antlr4/runtime/Java/src/org/antlr/v4/runtime/misc/Interval.java:[33,8] Class org.antlr.v4.runtime.misc.Interval overrides equals, but neither it nor any superclass overrides hashCode method
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mantlr4-runtime[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /Users/jeancarlorspaul/IdeaProjects/antlr4/runtime/Java/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.0:testCompile[m [1m(default-testCompile)[m @ [36mantlr4-runtime[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.12.4:test[m [1m(default-test)[m @ [36mantlr4-runtime[0;1m ---[m
[[1;34mINFO[m] No tests to run.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--------------------------< [0;36morg.antlr:antlr4[0;1m >--------------------------[m
[[1;34mINFO[m] [1mBuilding ANTLR 4 Tool 4.0-SNAPSHOT                                 [3/4][m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-enforcer-plugin:1.0:enforce[m [1m(enforce-maven)[m @ [36mantlr4[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mantlr3-maven-plugin:3.5:antlr[m [1m(default)[m @ [36mantlr4[0;1m ---[m
[[1;34mINFO[m] ANTLR: Processing source directory /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src
Grammar /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src/org/antlr/v4/parse/ANTLRLexer.g is up to date - build skipped
Grammar /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src/org/antlr/v4/parse/ANTLRParser.g is up to date - build skipped
Grammar /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src/org/antlr/v4/parse/GrammarTreeVisitor.g is up to date - build skipped
Grammar /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src/org/antlr/v4/codegen/SourceGenTriggers.g is up to date - build skipped
Grammar /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src/org/antlr/v4/parse/ActionSplitter.g is up to date - build skipped
Grammar /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src/org/antlr/v4/parse/BlockSetTransformer.g is up to date - build skipped
Grammar /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src/org/antlr/v4/parse/LeftRecursiveRuleWalker.g is up to date - build skipped
Grammar /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/src/org/antlr/v4/parse/ATNBuilder.g is up to date - build skipped
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mantlr4[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 7 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.0:compile[m [1m(default-compile)[m @ [36mantlr4[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 210 source files to /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/target/classes
[[1;33mWARNING[m] bootstrap class path not set in conjunction with -source 6
[[1;33mWARNING[m] source value 6 is obsolete and will be removed in a future release
[[1;33mWARNING[m] target value 1.6 is obsolete and will be removed in a future release
[[1;33mWARNING[m] To suppress warnings about obsolete options, use -Xlint:-options.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mantlr4[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 43 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.0:testCompile[m [1m(default-testCompile)[m @ [36mantlr4[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 39 source files to /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/target/test-classes
[[1;33mWARNING[m] bootstrap class path not set in conjunction with -source 6
[[1;33mWARNING[m] source value 6 is obsolete and will be removed in a future release
[[1;33mWARNING[m] target value 1.6 is obsolete and will be removed in a future release
[[1;33mWARNING[m] To suppress warnings about obsolete options, use -Xlint:-options.
[[1;33mWARNING[m] /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/test/org/antlr/v4/test/TestASTStructure.java:[78,54] newInstance() in java.lang.Class has been deprecated
[[1;33mWARNING[m] /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/test/org/antlr/v4/test/TestPerformance.java:[670,81] newInstance() in java.lang.Class has been deprecated
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.12.4:test[m [1m(default-test)[m @ [36mantlr4[0;1m ---[m
[[1;34mINFO[m] Surefire report directory: /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.antlr.v4.test.TestListeners
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestListeners-1751821379859
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestListeners-1751821380163
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestListeners-1751821380163
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestListeners-1751821380665
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestListeners-1751821380665
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestListeners-1751821380992
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestListeners-1751821381124
Tests run: 5, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 1.311 sec <<< FAILURE!
testLRWithLabels(org.antlr.v4.test.TestListeners)  Time elapsed: 0.305 sec  <<< FAILURE!
java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:92)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.junit.Assert.assertTrue(Assert.java:54)
	at org.antlr.v4.test.BaseTest.execParser(BaseTest.java:501)
	at org.antlr.v4.test.TestListeners.testLRWithLabels(TestListeners.java:217)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testLR(org.antlr.v4.test.TestListeners)  Time elapsed: 0.021 sec  <<< FAILURE!
java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:92)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.junit.Assert.assertTrue(Assert.java:54)
	at org.antlr.v4.test.BaseTest.execParser(BaseTest.java:501)
	at org.antlr.v4.test.TestListeners.testLR(TestListeners.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running org.antlr.v4.test.TestSemPredEvalLexer
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalLexer-1751821381145
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalLexer-1751821381269
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalLexer-1751821381370
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalLexer-1751821381476
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalLexer-1751821381595
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalLexer-1751821381702
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalLexer-1751821381800
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.747 sec
Running org.antlr.v4.test.TestActionTranslation
Tests run: 91, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.17 sec
Running org.antlr.v4.test.TestATNParserPrediction
[1, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT EPSILON)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="{&rarr;\n4\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s5[fontsize=11,label="&larr;\n5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s4:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s4:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(1,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1[fontsize=11, label="s1=>1\nalt1:(5,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

[-1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT EPSILON)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="{&rarr;\n4\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s5[fontsize=11,label="&larr;\n5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s4:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s4:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(1,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1[fontsize=11, label="s1=>2\nalt2:(1,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT EPSILON)))))
[1, -1]
[-1]
[1, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT A B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(3,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt2:(4,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11, label="s2=>1\nalt1:(1,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

[1, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT A B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(3,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt2:(4,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11, label="s2=>2\nalt2:(6,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

[1, 2, 3, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT A B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(3,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt2:(4,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11, label="s2=>2\nalt2:(6,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT A B)))))
[1, -1]
[1, 2, -1]
[1, 2, 3, -1]
[1, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT x) (ALT y))) (RULE x (BLOCK (ALT A))) (RULE y (BLOCK (ALT B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<x>", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<y>", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(12,[9 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1[fontsize=11, label="s1=>1\nalt1:(11,[9 $])", shape=doublecircle, fixedsize=true, width=.6];
}

[2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT x) (ALT y))) (RULE x (BLOCK (ALT A))) (RULE y (BLOCK (ALT B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<x>", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<y>", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(12,[9 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1[fontsize=11, label="s1=>2\nalt2:(13,[9 $])", shape=doublecircle, fixedsize=true, width=.6];
}

(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT x) (ALT y))) (RULE x (BLOCK (ALT A))) (RULE y (BLOCK (ALT B)))))
[1, -1]
[2, -1]
[1, -1]
[1, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT A) (ALT A B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s6:p2 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt0:\nalt3:(4,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt0:\nalt3:(5,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="s2^\nalt0:\nalt2:(1,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
}

[1, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT A) (ALT A B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s6:p2 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt0:\nalt3:(4,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt0:\nalt3:(5,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11, label="s2=>3\nalt3:(7,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A) (ALT A) (ALT A B)))))
[1, -1]
[1, 2, -1]
[1, 2, -1]
[1, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A B) (ALT A B) (ALT A B C)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt0:\nalt3:(6,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt0:\nalt3:(7,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s2[fontsize=11,label="s2\nalt0:\nalt0:\nalt3:(8,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="s3^\nalt0:\nalt2:(1,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
}

[1, 2, 3, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A B) (ALT A B) (ALT A B C)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt0:\nalt3:(6,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt0:\nalt3:(7,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s2[fontsize=11,label="s2\nalt0:\nalt0:\nalt3:(8,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11, label="s3=>3\nalt3:(10,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A B) (ALT A B) (ALT A B C)))))
[1, 2, -1]
[1, 2, 3, -1]
[1, 2, -1]
[6, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e B) (ALT e C))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(12,[8 $]), (16,[8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt2:(8,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11, label="s2=>1\nalt1:(6,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

[6, 3, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e B) (ALT e C))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(12,[8 $]), (16,[8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt2:(8,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11, label="s2=>2\nalt2:(9,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

[4, 4, 6, 5, 5, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e B) (ALT e C))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(12,[8 $]), (16,[8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt2:(12,[14 8 $]), (16,[14 8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s2[fontsize=11,label="s2\nalt0:\nalt2:(12,[14 14 8 $]), (16,[14 14 8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s3[fontsize=11,label="s3\nalt0:\nalt2:(14,[14 8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s4[fontsize=11,label="s4\nalt0:\nalt2:(14,[8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5[fontsize=11,label="s5\nalt0:\nalt2:(8,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11, label="s6=>1\nalt1:(6,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

[4, 4, 6, 5, 5, 3, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e B) (ALT e C))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(12,[8 $]), (16,[8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt2:(12,[14 8 $]), (16,[14 8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s2[fontsize=11,label="s2\nalt0:\nalt2:(12,[14 14 8 $]), (16,[14 14 8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s3[fontsize=11,label="s3\nalt0:\nalt2:(14,[14 8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s4[fontsize=11,label="s4\nalt0:\nalt2:(14,[8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s5[fontsize=11,label="s5\nalt0:\nalt2:(8,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11, label="s6=>2\nalt2:(9,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e B) (ALT e C))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
[6, 2, -1]
[6, 3, -1]
[4, 4, 6, 5, 5, 2, -1]
[4, 4, 6, 5, 5, 3, -1]
[1, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE ID (BLOCK (ALT (.. 'a' 'z')))) (RULE SEMI (BLOCK (ALT ';'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { ID SEMI INT) (RULES (RULE a (BLOCK (ALT (BLOCK (ALT ID) (ALT ID (? (BLOCK (ALT ID))))) SEMI)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="{&rarr;\n7\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s8[fontsize=11,label="&larr;\n8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s7:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s3 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s8 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "SEMI", arrowhead = normal];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s6 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA1  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(3,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "SEMI", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt2:(4,[$]), (9,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="s2^\nalt0:\nalt2:(1,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
}

[1, 1, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE ID (BLOCK (ALT (.. 'a' 'z')))) (RULE SEMI (BLOCK (ALT ';'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { ID SEMI INT) (RULES (RULE a (BLOCK (ALT (BLOCK (ALT ID) (ALT ID (? (BLOCK (ALT ID))))) SEMI)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="{&rarr;\n7\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s8[fontsize=11,label="&larr;\n8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s7:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s3 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s8 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "SEMI", arrowhead = normal];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s6 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA1  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(3,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt2:(4,[$]), (9,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11, label="s2=>2\nalt2:(6,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

[1, -1]
(LEXER_GRAMMAR L (RULES (RULE ID (BLOCK (ALT (.. 'a' 'z')))) (RULE SEMI (BLOCK (ALT ';'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { ID SEMI INT) (RULES (RULE a (BLOCK (ALT ID) (ALT ID) (ALT ID SEMI)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s6:p2 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "SEMI", arrowhead = normal];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt0:\nalt3:(4,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt0:\nalt3:(5,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="s2^\nalt0:\nalt2:(1,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
}

[1, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE ID (BLOCK (ALT (.. 'a' 'z')))) (RULE SEMI (BLOCK (ALT ';'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { ID SEMI INT) (RULES (RULE a (BLOCK (ALT ID) (ALT ID) (ALT ID SEMI)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s6:p2 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "SEMI", arrowhead = normal];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt0:\nalt3:(4,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "SEMI", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt0:\nalt3:(5,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11, label="s2=>3\nalt3:(7,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

[1, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A {;}) (ALT B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s3 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "action_0:-1", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(4,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1[fontsize=11, label="s1=>1\nalt1:(3,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

[2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A {;}) (ALT B)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s3 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "action_0:-1", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(4,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1[fontsize=11, label="s1=>2\nalt2:(6,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (RULES (RULE a (BLOCK (ALT A {;}) (ALT B)))))
[1, -1]
[2, -1]
[1, -1]
[1, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (tokens { A B C) (RULES (RULE a (BLOCK (ALT x B))) (RULE b (BLOCK (ALT x C))) (RULE x (BLOCK (ALT A) (ALT EPSILON)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<x>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<x>", arrowhead = normal];
s10 -> s11 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s3 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(7,[$],up=1), (10,[$],up=1)", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1[fontsize=11, label="s1=>1\nalt1:(15,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

[2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (tokens { A B C) (RULES (RULE a (BLOCK (ALT x B))) (RULE b (BLOCK (ALT x C))) (RULE x (BLOCK (ALT A) (ALT EPSILON)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<x>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<x>", arrowhead = normal];
s10 -> s11 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s3 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(7,[$],up=1), (10,[$],up=1)", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1[fontsize=11, label="s1=>2\nalt2:(8,[$],up=1)", shape=doublecircle, fixedsize=true, width=.6];
}

[3, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (tokens { A B C) (RULES (RULE a (BLOCK (ALT x B))) (RULE b (BLOCK (ALT x C))) (RULE x (BLOCK (ALT A) (ALT EPSILON)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<x>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<x>", arrowhead = normal];
s10 -> s11 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s3 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(7,[$],up=1), (10,[$],up=1)", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1[fontsize=11, label="s1=>2\nalt2:(11,[$],up=1)", shape=doublecircle, fixedsize=true, width=.6];
}

(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c')))))
(PARSER_GRAMMAR T (tokens { A B C) (RULES (RULE a (BLOCK (ALT x B))) (RULE b (BLOCK (ALT x C))) (RULE x (BLOCK (ALT A) (ALT EPSILON)))))
[1, -1]
[2, -1]
[3, -1]
[3, -1]
[6, 1, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e A) (ALT e A B))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="{&rarr;\n11\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s12[fontsize=11,label="&larr;\n12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s11:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s12 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s10 -> s12 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="17", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="{&rarr;\n18\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s19[fontsize=11,label="&larr;\n19", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s18 [fontname="Times-Italic", label="&epsilon;"];
s18:p0 -> s13 [fontname="Times-Italic", label="&epsilon;"];
s18:p1 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s17 -> s19 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s19 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s15 -> s16 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s16 -> s19 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(13,[8 $]), (17,[8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt2:(8,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s2[fontsize=11,label="s2\nalt0:\nalt2:(9,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11, label="s3=>1\nalt1:(1,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

[6, 1, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e A) (ALT e A B))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="{&rarr;\n11\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s12[fontsize=11,label="&larr;\n12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s11:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s12 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s10 -> s12 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="17", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="{&rarr;\n18\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s19[fontsize=11,label="&larr;\n19", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s18 [fontname="Times-Italic", label="&epsilon;"];
s18:p0 -> s13 [fontname="Times-Italic", label="&epsilon;"];
s18:p1 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s17 -> s19 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s19 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s15 -> s16 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s16 -> s19 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(13,[8 $]), (17,[8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt2:(8,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s2[fontsize=11,label="s2\nalt0:\nalt2:(9,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11, label="s3=>2\nalt2:(10,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

[4, 4, 6, 5, 5, 1, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e A) (ALT e A B))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="{&rarr;\n11\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s12[fontsize=11,label="&larr;\n12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s11:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s12 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s10 -> s12 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="17", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="{&rarr;\n18\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s19[fontsize=11,label="&larr;\n19", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s18 [fontname="Times-Italic", label="&epsilon;"];
s18:p0 -> s13 [fontname="Times-Italic", label="&epsilon;"];
s18:p1 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s17 -> s19 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s19 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s15 -> s16 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s16 -> s19 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(13,[8 $]), (17,[8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt2:(13,[15 8 $]), (17,[15 8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s2[fontsize=11,label="s2\nalt0:\nalt2:(13,[15 15 8 $]), (17,[15 15 8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s3[fontsize=11,label="s3\nalt0:\nalt2:(15,[15 8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s4[fontsize=11,label="s4\nalt0:\nalt2:(15,[8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5[fontsize=11,label="s5\nalt0:\nalt2:(8,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s6[fontsize=11,label="s6\nalt0:\nalt2:(9,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11, label="s7=>1\nalt1:(1,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

[4, 4, 6, 5, 5, 1, 2, -1]
(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e A) (ALT e A B))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="{&rarr;\n11\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s12[fontsize=11,label="&larr;\n12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s11:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s12 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s10 -> s12 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="17", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="{&rarr;\n18\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s19[fontsize=11,label="&larr;\n19", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s18 [fontname="Times-Italic", label="&epsilon;"];
s18:p0 -> s13 [fontname="Times-Italic", label="&epsilon;"];
s18:p1 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s17 -> s19 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s19 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s15 -> s16 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s16 -> s19 [fontname="Times-Italic", label="&epsilon;"];
}
digraph DFA0  {
rankdir=LR;
s0 -> s1 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s0[fontsize=11,label="s0\nalt0:\nalt2:(13,[8 $]), (17,[8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s1 -> s2 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s1[fontsize=11,label="s1\nalt0:\nalt2:(13,[15 8 $]), (17,[15 8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s2[fontsize=11,label="s2\nalt0:\nalt2:(13,[15 15 8 $]), (17,[15 15 8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s3[fontsize=11,label="s3\nalt0:\nalt2:(15,[15 8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s4[fontsize=11,label="s4\nalt0:\nalt2:(15,[8 $])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5[fontsize=11,label="s5\nalt0:\nalt2:(8,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6[fontsize=11,label="s6\nalt0:\nalt2:(9,[$])", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11, label="s7=>2\nalt2:(10,[$])", shape=doublecircle, fixedsize=true, width=.6];
}

(LEXER_GRAMMAR L (RULES (RULE A (BLOCK (ALT 'a'))) (RULE B (BLOCK (ALT 'b'))) (RULE C (BLOCK (ALT 'c'))) (RULE LP (BLOCK (ALT '('))) (RULE RP (BLOCK (ALT ')'))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9')))))))))
(PARSER_GRAMMAR T (tokens { A B C LP RP INT) (RULES (RULE a (BLOCK (ALT e A) (ALT e A B))) (RULE e (BLOCK (ALT LP e RP) (ALT INT)))))
[6, 1, -1]
[6, 1, 2, -1]
[4, 4, 6, 5, 5, 1, -1]
[4, 4, 6, 5, 5, 1, 2, -1]
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.093 sec
Running org.antlr.v4.test.TestParseErrors
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821382167
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821382291
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821382416
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821382522
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821382634
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821382757
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821382876
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821383031
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821383160
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821383175
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821383307
grammar T;
a : 'a' 'b'* 'c'  | 'a' 'b' 'd'  ;
q : 'e' ;

dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821383434
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821383572
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821383689
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821383792
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821383902
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821384014
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821384126
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821384243
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821384341
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821384439
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821384537
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821384639
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseErrors-1751821384747
Tests run: 24, Failures: 7, Errors: 0, Skipped: 0, Time elapsed: 2.59 sec <<< FAILURE!
testConjuringUpToken(org.antlr.v4.test.TestParseErrors)  Time elapsed: 0.112 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...-1='<missing 'b'>',<[1]>,1:1]
> but was:<...-1='<missing 'b'>',<[2]>,1:1]
>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestParseErrors.testConjuringUpToken(TestParseErrors.java:86)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testInvalidATNStateRemoval(org.antlr.v4.test.TestParseErrors)  Time elapsed: 0.015 sec  <<< FAILURE!
java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:92)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.junit.Assert.assertTrue(Assert.java:54)
	at org.antlr.v4.test.BaseTest.execParser(BaseTest.java:501)
	at org.antlr.v4.test.TestParseErrors.testInvalidATNStateRemoval(TestParseErrors.java:363)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testConjuringUpTokenFromSet(org.antlr.v4.test.TestParseErrors)  Time elapsed: 0.11 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...-1='<missing 'b'>',<[1]>,1:1]
> but was:<...-1='<missing 'b'>',<[2]>,1:1]
>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestParseErrors.testConjuringUpTokenFromSet(TestParseErrors.java:105)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMultiTokenDeletionBeforeLoop2(org.antlr.v4.test.TestParseErrors)  Time elapsed: 0.098 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...a' expecting {'b', '[z', 'c]'}
> but was:<...a' expecting {'b', '[c', 'z]'}
>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestParseErrors.testMultiTokenDeletionBeforeLoop2(TestParseErrors.java:215)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testSingleTokenDeletionDuringLoop2(org.antlr.v4.test.TestParseErrors)  Time elapsed: 0.102 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...a' expecting {'b', '[z', 'c]'}
> but was:<...a' expecting {'b', '[c', 'z]'}
>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestParseErrors.testSingleTokenDeletionDuringLoop2(TestParseErrors.java:225)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testMultiTokenDeletionDuringLoop2(org.antlr.v4.test.TestParseErrors)  Time elapsed: 0.108 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...a' expecting {'b', '[z', 'c'}
line 1:6 extraneous input 'a' expecting {'b', 'z', 'c]'}
> but was:<...a' expecting {'b', '[c', 'z'}
line 1:6 extraneous input 'a' expecting {'b', 'c', 'z]'}
>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestParseErrors.testMultiTokenDeletionDuringLoop2(TestParseErrors.java:237)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testDuplicatedLeftRecursiveCall(org.antlr.v4.test.TestParseErrors)  Time elapsed: 0.011 sec  <<< FAILURE!
java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:92)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.junit.Assert.assertTrue(Assert.java:54)
	at org.antlr.v4.test.BaseTest.execParser(BaseTest.java:501)
	at org.antlr.v4.test.TestParseErrors.testDuplicatedLeftRecursiveCall(TestParseErrors.java:317)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running org.antlr.v4.test.TestATNLexerInterpreter
null
[A, EOF]
null
[B, EOF]
null
[CMT, EOF]
null
[A, B, A, B, EOF]
null
[A, EOF]
null
[A, EOF]
null
[A, EOF]
null
[A, EOF]
null
[A, EOF]
null
[A, EOF]
null
[A, EOF]
null
[A, EOF]
null
[ID, INT, ID, INT, EOF]
null
[ID, EOF]
null
[INT, WS, INT, EOF]
null
[CMT, WS, CMT, EOF]
null
[STR, EOF]
null
[STR, EOF]
null
[B, EOF]
null
[A, B, EOF]
null
[CMT, EOF]
null
[CMT, EOF]
null
[B, EOF]
null
[A, EOF]
null
[A, DONE, EOF]
null
[KEND, EOF]
null
[ID, EOF]
null
[ID, WS, KEND, WS, ID, EOF]
null
[CMT, WS, CMT, WS, EOF]
null
[CMT, EOF]
null
[CMT, CMT, EOF]
null
[CMT, EOF]
null
[CMT, CMT, EOF]
null
[CMT, EOF]
Tests run: 26, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.066 sec
Running org.antlr.v4.test.TestFastQueue
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running org.antlr.v4.test.TestBasicSemanticErrors
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running org.antlr.v4.test.TestAttributeChecks
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.055 sec
Running org.antlr.v4.test.TestCommonTokenStream
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running org.antlr.v4.test.TestTopologicalSort
Tests run: 5, Failures: 3, Errors: 0, Skipped: 0, Time elapsed: 0 sec <<< FAILURE!
testFairlyLargeGraph(org.antlr.v4.test.TestTopologicalSort)  Time elapsed: 0 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<[H, F, E, D, [G, A, B], C]> but was:<[H, F, E, D, [A, B, G], C]>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestTopologicalSort.testFairlyLargeGraph(TestTopologicalSort.java:59)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testSimpleTokenDependence(org.antlr.v4.test.TestTopologicalSort)  Time elapsed: 0 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...va.g4, Java.tokens, [Ref.g4, D]ef.g4]> but was:<...va.g4, Java.tokens, [Def.g4, R]ef.g4]>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestTopologicalSort.testSimpleTokenDependence(TestTopologicalSort.java:101)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testParserLexerCombo(org.antlr.v4.test.TestTopologicalSort)  Time elapsed: 0 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...ens, JavaParser.g4, [Ref.g4, D]ef.g4]> but was:<...ens, JavaParser.g4, [Def.g4, R]ef.g4]>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestTopologicalSort.testParserLexerCombo(TestTopologicalSort.java:115)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running org.antlr.v4.test.TestLexerErrors
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751821384913
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751821384997
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751821385081
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751821385166
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751821385259
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751821385259
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751821385439
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751821385439
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751821385617
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751821385699
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751821385781
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerErrors-1751821385863
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.024 sec
Running org.antlr.v4.test.TestLexerExec
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821385945
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821385945
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821386107
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821386189
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821386271
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821386379
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821386488
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821386575
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821386662
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821386749
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821386831
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821386974
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821387113
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821387228
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821387328
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821387432
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821387536
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821387636
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821387733
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821387825
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821387914
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821388007
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821388103
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821388195
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821388282
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821388369
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821388455
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821388553
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821388637
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821388722
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821388809
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821388894
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821388982
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821389081
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821389190
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821389281
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821389281
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821389463
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821389463
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821389631
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821389715
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLexerExec-1751821389799
Tests run: 39, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.961 sec
Running org.antlr.v4.test.TestTokenStreamRewriter
Tests run: 40, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.166 sec
Running org.antlr.v4.test.TestATNDeserialization
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 sec
Running org.antlr.v4.test.TestToolSyntaxErrors
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running org.antlr.v4.test.TestATNSerialization
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "~A", arrowhead = normal];
s3 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
Tests run: 22, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 sec
Running org.antlr.v4.test.TestParseTrees
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTrees-1751821390146
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTrees-1751821390246
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTrees-1751821390346
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTrees-1751821390467
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTrees-1751821390592
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTrees-1751821390698
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTrees-1751821390810
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParseTrees-1751821390922
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.868 sec
Running org.antlr.v4.test.TestATNConstruction
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "{A, B}", arrowhead = normal];
s3 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "{'b', A}", arrowhead = normal];
s3 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="{&rarr;\n4\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s5[fontsize=11,label="&larr;\n5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s4:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s4:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="{&rarr;\n3\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s3:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s3:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s5:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "action_0:-1", arrowhead = normal];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="{&rarr;\n3\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s3:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s3:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "{A, B}", arrowhead = normal];
s4 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "{A, B}", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s4 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5+\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="{7+\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "action_0:-1", arrowhead = normal];
s7:p0 -> s5 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s7:p1 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5+\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="{7+\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s5:p2 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s4 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7:p0 -> s5 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s7:p1 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="&rarr;\n4*", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="&larr;\n5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{6*\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8*", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="&rarr;\n9*", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="{11*\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13*", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11:p0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s11:p1 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "COMMA", arrowhead = normal];
s6:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s7 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "ID", arrowhead = normal];
s10 -> s13 [fontname="Times-Italic", label="&epsilon;"];
s5 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s13 -> s11 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s8 -> s6 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5*\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="{7*\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9*", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7:p0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s7:p1 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "action_0:-1", arrowhead = normal];
s9 -> s7 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "pred_0:0", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "pred_0:1", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "action_0:-1", arrowhead = normal];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s4 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "D", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<b>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s3 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s3 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="&rarr;\n3+", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{5+\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s3 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="&rarr;\n3*", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{5*\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7*", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7 -> s5 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
}
Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 sec
Running org.antlr.v4.test.TestIntervalSet
Tests run: 38, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running org.antlr.v4.test.TestASTStructure
Tests run: 41, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running org.antlr.v4.test.TestActionSplitter
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running org.antlr.v4.test.TestParserExec
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821391047
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821391151
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821391151
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821391384
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821391384
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821391605
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821391699
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821391699
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821391914
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821391914
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821391914
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821391914
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821392288
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821392415
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821392522
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821392522
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821392710
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821392721
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821392824
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821392925
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestParserExec-1751821392925
Tests run: 14, Failures: 1, Errors: 0, Skipped: 1, Time elapsed: 2.097 sec <<< FAILURE!
testLabels(org.antlr.v4.test.TestParserExec)  Time elapsed: 0.011 sec  <<< FAILURE!
java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:92)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.junit.Assert.assertTrue(Assert.java:54)
	at org.antlr.v4.test.BaseTest.execParser(BaseTest.java:501)
	at org.antlr.v4.test.TestParserExec.testLabels(TestParserExec.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running org.antlr.v4.test.TestSets
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821393144
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821393252
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821393346
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821393442
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821393554
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821393655
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821393759
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821393858
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821393858
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821394056
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821394153
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821394259
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821394368
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821394469
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821394571
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821394679
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821394770
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821394872
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821394991
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821395084
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821395171
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSets-1751821395258
Tests run: 23, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.21 sec
Running org.antlr.v4.test.TestTokenTypeAssignment
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running org.antlr.v4.test.TestFullContextParsing
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751821395368
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751821395368
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751821395578
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751821395683
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751821395788
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751821395788
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751821395983
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751821396088
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751821396187
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751821396187
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751821396187
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751821396187
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751821396187
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751821396187
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestFullContextParsing-1751821396850
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.608 sec
Running org.antlr.v4.test.TestPerformance
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0 sec <<< FAILURE!
compileJdk(org.antlr.v4.test.TestPerformance)  Time elapsed: 0 sec  <<< FAILURE!
java.lang.AssertionError: The JDK_SOURCE_ROOT environment variable must be set for performance testing.
	at org.junit.Assert.fail(Assert.java:93)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.antlr.v4.test.TestPerformance.compileJdk(TestPerformance.java:259)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running org.antlr.v4.test.TestATNInterpreter
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 4, -1]
input=[1, 2, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 3, 4, -1]
input=[1, 2, 3, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 3, -1]
input=[1, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s7 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 1, 3, -1]
input=[1, 1, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="&rarr;\n3+", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{5+\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="&rarr;\n9+", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="{11+\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="{&rarr;\n14\nd=2|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s15[fontsize=11,label="&larr;\n15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s14 [fontname="Times-Italic", label="&epsilon;"];
s14:p0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14:p1 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s10 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s3 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s11:p0 -> s9 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s11:p1 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontname="Times-Italic", label="&epsilon;"];
s7 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s13 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s15 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, -1]
input=[1, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[6, 2, -1]
input=[6, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
[6, 3, -1]
input=[6, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
[4, 6, 5, 2, -1]
input=[4, 6, 5, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
[4, 6, 5, 3, -1]
input=[4, 6, 5, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
[4, 4, 6, 5, 5, 2, -1]
input=[4, 4, 6, 5, 5, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
[4, 4, 6, 5, 5, 3, -1]
input=[4, 4, 6, 5, 5, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="{&rarr;\n10\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s11[fontsize=11,label="&larr;\n11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s10:p0 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s10:p1 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s6 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
digraph ATN {
rankdir=LR;
s3[fontsize=11, label="3", shape=doublecircle, fixedsize=true, width=.6];
s16[fontsize=11,label="16", shape=circle, fixedsize=true, width=.55, peripheries=1];
s17[fontsize=11,label="{&rarr;\n17\nd=1|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s18[fontsize=11,label="&larr;\n18", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s13[fontsize=11,label="13", shape=circle, fixedsize=true, width=.55, peripheries=1];
s14[fontsize=11,label="14", shape=circle, fixedsize=true, width=.55, peripheries=1];
s15[fontsize=11,label="15", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2 -> s17 [fontname="Times-Italic", label="&epsilon;"];
s17:p0 -> s12 [fontname="Times-Italic", label="&epsilon;"];
s17:p1 -> s16 [fontname="Times-Italic", label="&epsilon;"];
s12 -> s13 [fontsize=11, fontname="Courier", arrowsize=.7, label = "LP", arrowhead = normal];
s16 -> s18 [fontsize=11, fontname="Courier", arrowsize=.7, label = "INT", arrowhead = normal];
s13 -> s14 [fontsize=11, fontname="Courier", arrowsize=.7, label = "<e>", arrowhead = normal];
s18 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s14 -> s15 [fontsize=11, fontname="Courier", arrowsize=.7, label = "RP", arrowhead = normal];
s15 -> s18 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s4 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="&rarr;\n3+", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{5+\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s3 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 1, 2, -1]
input=[1, 1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="&rarr;\n3+", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{5+\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s3 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 1, 1, 1, 1, 1, 2, -1]
input=[1, 1, 1, 1, 1, 1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="&rarr;\n3+", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{5+\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s3 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 1, 2, 4, -1]
input=[1, 1, 2, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="&rarr;\n3+", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="&larr;\n4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{5+\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s3 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s3 [fontname="Times-Italic", label="&epsilon;", style="dashed"];
s5:p1 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[2, -1]
input=[2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "~A", arrowhead = normal];
s3 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, -1]
input=[1, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[1, 3, -1]
input=[1, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
}
[1, -1]
input=[1, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="{&rarr;\n5\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s6[fontsize=11,label="&larr;\n6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s5:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s5:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s8 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, -1]
input=[1, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 4, -1]
input=[1, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 4, -1]
input=[1, 2, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 3, 4, -1]
input=[1, 2, 3, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, -1]
input=[1, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s3 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s4 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s9 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s11 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, -1]
input=[1, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 4, -1]
input=[1, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 4, -1]
input=[1, 2, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, 2, 3, 4, -1]
input=[1, 2, 3, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
}
[1, -1]
input=[1, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="{&rarr;\n8\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s9[fontsize=11,label="&larr;\n9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s8:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s8:p2 -> s5 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s5 -> s6 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s9 -> s10 [fontname="Times-Italic", label="&epsilon;"];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s11 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s7 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 3, 4, -1]
input=[1, 2, 3, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="{&rarr;\n6\nd=0|{<p0>|<p1>}}", shape=record, fixedsize=false, peripheries=1];
s7[fontsize=11,label="&larr;\n7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s6:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s6:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s9 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s9 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 4, -1]
input=[1, 2, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="{&rarr;\n7\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s8[fontsize=11,label="&larr;\n8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s7:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s7:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s3 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "D", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 4, 3, -1]
input=[1, 2, 4, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="{&rarr;\n7\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s8[fontsize=11,label="&larr;\n8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s7:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s7:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s3 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "D", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[3, 4, -1]
input=[3, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="{&rarr;\n7\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s8[fontsize=11,label="&larr;\n8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="9", shape=circle, fixedsize=true, width=.55, peripheries=1];
s10[fontsize=11,label="10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s7 [fontname="Times-Italic", label="&epsilon;"];
s7:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s7:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s7:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s3 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s8 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "D", arrowhead = normal];
s10 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, -1]
input=[1, 2, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s12 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s12 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 3, -1]
input=[1, 2, 3, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s12 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s12 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
[1, 2, 4, -1]
input=[1, 2, 4, -1]
digraph ATN {
rankdir=LR;
s1[fontsize=11, label="1", shape=doublecircle, fixedsize=true, width=.6];
s0[fontsize=11,label="0", shape=circle, fixedsize=true, width=.55, peripheries=1];
s2[fontsize=11,label="2", shape=circle, fixedsize=true, width=.55, peripheries=1];
s3[fontsize=11,label="3", shape=circle, fixedsize=true, width=.55, peripheries=1];
s4[fontsize=11,label="4", shape=circle, fixedsize=true, width=.55, peripheries=1];
s5[fontsize=11,label="5", shape=circle, fixedsize=true, width=.55, peripheries=1];
s6[fontsize=11,label="6", shape=circle, fixedsize=true, width=.55, peripheries=1];
s7[fontsize=11,label="7", shape=circle, fixedsize=true, width=.55, peripheries=1];
s8[fontsize=11,label="8", shape=circle, fixedsize=true, width=.55, peripheries=1];
s9[fontsize=11,label="{&rarr;\n9\nd=0|{<p0>|<p1>|<p2>}}", shape=record, fixedsize=false, peripheries=1];
s10[fontsize=11,label="&larr;\n10", shape=circle, fixedsize=true, width=.55, peripheries=1];
s11[fontsize=11,label="11", shape=circle, fixedsize=true, width=.55, peripheries=1];
s12[fontsize=11,label="12", shape=circle, fixedsize=true, width=.55, peripheries=1];
s0 -> s9 [fontname="Times-Italic", label="&epsilon;"];
s9:p0 -> s2 [fontname="Times-Italic", label="&epsilon;"];
s9:p1 -> s4 [fontname="Times-Italic", label="&epsilon;"];
s9:p2 -> s6 [fontname="Times-Italic", label="&epsilon;"];
s2 -> s3 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s4 -> s5 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s6 -> s7 [fontsize=11, fontname="Courier", arrowsize=.7, label = "A", arrowhead = normal];
s3 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s5 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s7 -> s8 [fontsize=11, fontname="Courier", arrowsize=.7, label = "B", arrowhead = normal];
s10 -> s11 [fontname="Times-Italic", label="&epsilon;"];
s8 -> s10 [fontsize=11, fontname="Courier", arrowsize=.7, label = "C", arrowhead = normal];
s11 -> s12 [fontsize=11, fontname="Courier", arrowsize=.7, label = "EOF", arrowhead = normal];
s12 -> s1 [fontname="Times-Italic", label="&epsilon;"];
}
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.055 sec
Running org.antlr.v4.test.TestScopeParsing
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running org.antlr.v4.test.TestCompositeGrammars
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821397034
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821397134
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821397233
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821397357
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821397366
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821397473
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821397488
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821397504
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821397519
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821397621
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821397714
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821397822
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821397920
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821398013
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821398095
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821398179
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821398276
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821398367
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821398458
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestCompositeGrammars-1751821398563
Tests run: 23, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.647 sec
Running org.antlr.v4.test.TestUnbufferedCharStream
Tests run: 22, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running org.antlr.v4.test.TestLeftRecursion
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751821398688
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751821398699
a -> dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751821398800
a -> dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751821398882
a|b&c -> dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751821398967
a -> dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751821399040
4 -> dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751821399116
4 -> dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751821399194
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751821399206
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751821399217
4 -> dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestLeftRecursion-1751821399291
a -> Tests run: 13, Failures: 11, Errors: 2, Skipped: 0, Time elapsed: 0.683 sec <<< FAILURE!
testSemPred(org.antlr.v4.test.TestLeftRecursion)  Time elapsed: 0.011 sec  <<< FAILURE!
java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:92)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.junit.Assert.assertTrue(Assert.java:54)
	at org.antlr.v4.test.BaseTest.execParser(BaseTest.java:501)
	at org.antlr.v4.test.TestLeftRecursion.testSemPred(TestLeftRecursion.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testTernaryExpr(org.antlr.v4.test.TestLeftRecursion)  Time elapsed: 0.101 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<[(s (e a) <EOF>)
]> but was:<[]>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestLeftRecursion.runTests(TestLeftRecursion.java:417)
	at org.antlr.v4.test.TestLeftRecursion.testTernaryExpr(TestLeftRecursion.java:105)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testExpressions(org.antlr.v4.test.TestLeftRecursion)  Time elapsed: 0.082 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<[(s (e a) <EOF>)
]> but was:<[]>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestLeftRecursion.runTests(TestLeftRecursion.java:417)
	at org.antlr.v4.test.TestLeftRecursion.testExpressions(TestLeftRecursion.java:133)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testJavaExpressions(org.antlr.v4.test.TestLeftRecursion)  Time elapsed: 0.085 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<[(s (e (e a) | (e (e b) & (e c))) <EOF>)
]> but was:<[]>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestLeftRecursion.runTests(TestLeftRecursion.java:417)
	at org.antlr.v4.test.TestLeftRecursion.testJavaExpressions(TestLeftRecursion.java:209)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testDeclarations(org.antlr.v4.test.TestLeftRecursion)  Time elapsed: 0.073 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<[(s (declarator a) <EOF>)
]> but was:<[]>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestLeftRecursion.runTests(TestLeftRecursion.java:417)
	at org.antlr.v4.test.TestLeftRecursion.testDeclarations(TestLeftRecursion.java:240)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testReturnValueAndActions(org.antlr.v4.test.TestLeftRecursion)  Time elapsed: 0.076 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<[4
]> but was:<[]>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestLeftRecursion.runTests(TestLeftRecursion.java:417)
	at org.antlr.v4.test.TestLeftRecursion.testReturnValueAndActions(TestLeftRecursion.java:261)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testLabelsOnOpSubrule(org.antlr.v4.test.TestLeftRecursion)  Time elapsed: 0.078 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<[(s (e 4))
]> but was:<[]>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestLeftRecursion.runTests(TestLeftRecursion.java:417)
	at org.antlr.v4.test.TestLeftRecursion.testLabelsOnOpSubrule(TestLeftRecursion.java:279)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testAmbigLR(org.antlr.v4.test.TestLeftRecursion)  Time elapsed: 0.012 sec  <<< FAILURE!
java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:92)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.junit.Assert.assertTrue(Assert.java:54)
	at org.antlr.v4.test.BaseTest.execParser(BaseTest.java:501)
	at org.antlr.v4.test.TestLeftRecursion.testAmbigLR(TestLeftRecursion.java:354)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testSimple(org.antlr.v4.test.TestLeftRecursion)  Time elapsed: 0.011 sec  <<< FAILURE!
java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:92)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.junit.Assert.assertTrue(Assert.java:54)
	at org.antlr.v4.test.BaseTest.execParser(BaseTest.java:501)
	at org.antlr.v4.test.TestLeftRecursion.testSimple(TestLeftRecursion.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testReturnValueAndActionsAndLabels(org.antlr.v4.test.TestLeftRecursion)  Time elapsed: 0.074 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<[4
]> but was:<[]>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestLeftRecursion.runTests(TestLeftRecursion.java:417)
	at org.antlr.v4.test.TestLeftRecursion.testReturnValueAndActionsAndLabels(TestLeftRecursion.java:306)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testPrefixOpWithActionAndLabel(org.antlr.v4.test.TestLeftRecursion)  Time elapsed: 0.072 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<[a
]> but was:<[]>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.antlr.v4.test.TestLeftRecursion.runTests(TestLeftRecursion.java:417)
	at org.antlr.v4.test.TestLeftRecursion.testPrefixOpWithActionAndLabel(TestLeftRecursion.java:327)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testCheckForNonLeftRecursiveRule(org.antlr.v4.test.TestLeftRecursion)  Time elapsed: 0.004 sec  <<< ERROR!
java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at org.antlr.v4.misc.OrderedHashMap.getElement(OrderedHashMap.java:46)
	at org.antlr.v4.analysis.LeftRecursiveRuleTransformer.setAltASTPointers(LeftRecursiveRuleTransformer.java:241)
	at org.antlr.v4.analysis.LeftRecursiveRuleTransformer.translateLeftRecursiveRule(LeftRecursiveRuleTransformer.java:162)
	at org.antlr.v4.analysis.LeftRecursiveRuleTransformer.translateLeftRecursiveRules(LeftRecursiveRuleTransformer.java:89)
	at org.antlr.v4.semantics.SemanticPipeline.process(SemanticPipeline.java:94)
	at org.antlr.v4.Tool.processNonCombinedGrammar(Tool.java:399)
	at org.antlr.v4.Tool.process(Tool.java:384)
	at org.antlr.v4.tool.Grammar.<init>(Grammar.java:283)
	at org.antlr.v4.test.BaseTest.testErrors(BaseTest.java:679)
	at org.antlr.v4.test.TestLeftRecursion.testCheckForNonLeftRecursiveRule(TestLeftRecursion.java:387)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

testCheckForLeftRecursiveEmptyFollow(org.antlr.v4.test.TestLeftRecursion)  Time elapsed: 0.004 sec  <<< ERROR!
java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at org.antlr.v4.misc.OrderedHashMap.getElement(OrderedHashMap.java:46)
	at org.antlr.v4.analysis.LeftRecursiveRuleTransformer.setAltASTPointers(LeftRecursiveRuleTransformer.java:241)
	at org.antlr.v4.analysis.LeftRecursiveRuleTransformer.translateLeftRecursiveRule(LeftRecursiveRuleTransformer.java:162)
	at org.antlr.v4.analysis.LeftRecursiveRuleTransformer.translateLeftRecursiveRules(LeftRecursiveRuleTransformer.java:89)
	at org.antlr.v4.semantics.SemanticPipeline.process(SemanticPipeline.java:94)
	at org.antlr.v4.Tool.processNonCombinedGrammar(Tool.java:399)
	at org.antlr.v4.Tool.process(Tool.java:384)
	at org.antlr.v4.tool.Grammar.<init>(Grammar.java:283)
	at org.antlr.v4.test.BaseTest.testErrors(BaseTest.java:679)
	at org.antlr.v4.test.TestLeftRecursion.testCheckForLeftRecursiveEmptyFollow(TestLeftRecursion.java:401)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)

Running org.antlr.v4.test.TestUnbufferedTokenStream
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running org.antlr.v4.test.TestBufferedTokenStream
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running org.antlr.v4.test.TestGraphNodes
digraph G {
rankdir=LR;
  s0[label="$"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>$"];
  s1[label="$"];
  s0:p0->s1[label="9"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>$"];
  s1[label="$"];
  s0:p0->s1[label="9"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[shape=record, label="<p0>|<p1>$"];
  s2[label="$"];
  s0->s1[label="1"];
  s1:p0->s2[label="9"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[label="*"];
  s0->s1[label="1"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>$"];
  s1[shape=record, label="<p0>|<p1>$"];
  s2[label="$"];
  s0:p0->s1[label="8"];
  s1:p0->s2[label="8"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[shape=record, label="<p0>|<p1>$"];
  s2[label="$"];
  s0->s1[label="1"];
  s1:p0->s2[label="9"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[label="1"];
  s2[label="*"];
  s0->s1[label="1"];
  s1->s2[label="9"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[label="1"];
  s2[label="2"];
  s3[label="*"];
  s0->s1[label="1"];
  s1->s2[label="2"];
  s2->s3[label="9"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[shape=record, label="<p0>|<p1>"];
  s2[label="2"];
  s3[label="*"];
  s0->s1[label="1"];
  s1:p0->s2[label="2"];
  s1:p1->s2[label="3"];
  s2->s3[label="9"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s1[label="1"];
  s2[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
  s1->s2[label="9"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s2[label="2"];
  s1[label="$"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="2"];
  s2->s1[label="9"];
}

digraph G {
rankdir=LR;
  s0[label="$"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>"];
  s1[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
  s0:p2->s1[label="3"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>"];
  s1[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
  s0:p2->s1[label="3"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>"];
  s1[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
  s0:p2->s1[label="3"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s1[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s1[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s2[label="2"];
  s3[label="*"];
  s1[label="1"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="2"];
  s2->s3[label="10"];
  s1->s3[label="9"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[shape=record, label="<p0>|<p1>"];
  s2[label="*"];
  s0->s1[label="1"];
  s1:p0->s2[label="9"];
  s1:p1->s2[label="10"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>"];
  s2[label="*"];
  s1[shape=record, label="<p0>|<p1>"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="3"];
  s0:p2->s2[label="4"];
  s1:p0->s2[label="9"];
  s1:p1->s2[label="10"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>|<p3>"];
  s4[label="4"];
  s5[label="*"];
  s3[label="3"];
  s2[label="2"];
  s1[label="1"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="2"];
  s0:p2->s3[label="3"];
  s0:p3->s4[label="4"];
  s4->s5[label="9"];
  s3->s5[label="8"];
  s2->s5[label="7"];
  s1->s5[label="6"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>"];
  s3[label="3"];
  s4[label="*"];
  s2[label="2"];
  s1[label="1"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="2"];
  s0:p2->s3[label="4"];
  s3->s4[label="9"];
  s2->s4[label="7"];
  s1->s4[label="6"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>"];
  s3[label="3"];
  s4[label="*"];
  s2[shape=record, label="<p0>|<p1>"];
  s1[label="1"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="2"];
  s0:p2->s3[label="4"];
  s3->s4[label="9"];
  s2:p0->s4[label="7"];
  s2:p1->s4[label="8"];
  s1->s4[label="6"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>"];
  s2[label="2"];
  s3[label="*"];
  s1[label="1"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="2"];
  s0:p2->s1[label="4"];
  s2->s3[label="7"];
  s1->s3[label="6"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>|<p2>|<p3>"];
  s1[label="1"];
  s2[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
  s0:p2->s1[label="3"];
  s0:p3->s1[label="4"];
  s1->s2[label="6"];
}

digraph G {
rankdir=LR;
  s0[label="*"];
}

digraph G {
rankdir=LR;
  s0[label="*"];
}

digraph G {
rankdir=LR;
  s0[label="*"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[label="*"];
  s0->s1[label="1"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[label="*"];
  s0->s1[label="1"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s1[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[label="1"];
  s2[label="*"];
  s0->s1[label="1"];
  s1->s2[label="9"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s1[label="1"];
  s2[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s1[label="2"];
  s1->s2[label="9"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s2[label="2"];
  s3[label="*"];
  s1[label="1"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="2"];
  s2->s3[label="10"];
  s1->s3[label="9"];
}

digraph G {
rankdir=LR;
  s0[shape=record, label="<p0>|<p1>"];
  s2[label="2"];
  s1[label="*"];
  s0:p0->s1[label="1"];
  s0:p1->s2[label="2"];
  s2->s1[label="9"];
}

digraph G {
rankdir=LR;
  s0[label="0"];
  s1[label="*"];
  s0->s1[label="1"];
}

Tests run: 38, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.001 sec
Running org.antlr.v4.test.TestSemPredEvalParser
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821399409
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821399518
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821399624
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821399732
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821399845
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821399962
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821400063
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821400158
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821400255
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821400366
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821400486
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821400588
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821400681
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821400782
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821400900
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821400997
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821401106
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821401200
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821401295
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821401422
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821401538
dir /var/folders/qv/gp4gxrr95s1fgz2d27w5rsd00000gn/T/TestSemPredEvalParser-1751821401538
Tests run: 21, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.342 sec
Running org.antlr.v4.test.TestSymbolIssues
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec

Results :

Failed tests:   testLRWithLabels(org.antlr.v4.test.TestListeners)
  testLR(org.antlr.v4.test.TestListeners)
  testConjuringUpToken(org.antlr.v4.test.TestParseErrors): expected:<...-1='<missing 'b'>',<[1]>,1:1](..)
  testInvalidATNStateRemoval(org.antlr.v4.test.TestParseErrors)
  testConjuringUpTokenFromSet(org.antlr.v4.test.TestParseErrors): expected:<...-1='<missing 'b'>',<[1]>,1:1](..)
  testMultiTokenDeletionBeforeLoop2(org.antlr.v4.test.TestParseErrors): expected:<...a' expecting {'b', '[z', 'c]'}(..)
  testSingleTokenDeletionDuringLoop2(org.antlr.v4.test.TestParseErrors): expected:<...a' expecting {'b', '[z', 'c]'}(..)
  testMultiTokenDeletionDuringLoop2(org.antlr.v4.test.TestParseErrors): expected:<...a' expecting {'b', '[z', 'c'}(..)
  testDuplicatedLeftRecursiveCall(org.antlr.v4.test.TestParseErrors)
  testFairlyLargeGraph(org.antlr.v4.test.TestTopologicalSort): expected:<[H, F, E, D, [G, A, B], C]> but was:<[H, F, E, D, [A, B, G], C]>
  testSimpleTokenDependence(org.antlr.v4.test.TestTopologicalSort): expected:<...va.g4, Java.tokens, [Ref.g4, D]ef.g4]> but was:<...va.g4, Java.tokens, [Def.g4, R]ef.g4]>
  testParserLexerCombo(org.antlr.v4.test.TestTopologicalSort): expected:<...ens, JavaParser.g4, [Ref.g4, D]ef.g4]> but was:<...ens, JavaParser.g4, [Def.g4, R]ef.g4]>
  testLabels(org.antlr.v4.test.TestParserExec)
  compileJdk(org.antlr.v4.test.TestPerformance): The JDK_SOURCE_ROOT environment variable must be set for performance testing.
  testSemPred(org.antlr.v4.test.TestLeftRecursion)
  testTernaryExpr(org.antlr.v4.test.TestLeftRecursion): expected:<[(s (e a) <EOF>)(..)
  testExpressions(org.antlr.v4.test.TestLeftRecursion): expected:<[(s (e a) <EOF>)(..)
  testJavaExpressions(org.antlr.v4.test.TestLeftRecursion): expected:<[(s (e (e a) | (e (e b) & (e c))) <EOF>)(..)
  testDeclarations(org.antlr.v4.test.TestLeftRecursion): expected:<[(s (declarator a) <EOF>)(..)
  testReturnValueAndActions(org.antlr.v4.test.TestLeftRecursion): expected:<[4(..)
  testLabelsOnOpSubrule(org.antlr.v4.test.TestLeftRecursion): expected:<[(s (e 4))(..)
  testAmbigLR(org.antlr.v4.test.TestLeftRecursion)
  testSimple(org.antlr.v4.test.TestLeftRecursion)
  testReturnValueAndActionsAndLabels(org.antlr.v4.test.TestLeftRecursion): expected:<[4(..)
  testPrefixOpWithActionAndLabel(org.antlr.v4.test.TestLeftRecursion): expected:<[a(..)

Tests in error: 
  testCheckForNonLeftRecursiveRule(org.antlr.v4.test.TestLeftRecursion): Index 0 out of bounds for length 0
  testCheckForLeftRecursiveEmptyFollow(org.antlr.v4.test.TestLeftRecursion): Index 0 out of bounds for length 0

Tests run: 656, Failures: 25, Errors: 2, Skipped: 2

[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1mReactor Summary for ANTLR 4 4.0-SNAPSHOT:[m
[[1;34mINFO[m] 
[[1;34mINFO[m] ANTLR 4 ............................................ [1;32mSUCCESS[m [  0.089 s]
[[1;34mINFO[m] ANTLR 4 Runtime .................................... [1;32mSUCCESS[m [  0.838 s]
[[1;34mINFO[m] ANTLR 4 Tool ....................................... [1;31mFAILURE[m [ 23.119 s]
[[1;34mINFO[m] ANTLR 4 Maven plugin ............................... [1;33mSKIPPED[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;31mBUILD FAILURE[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  24.090 s
[[1;34mINFO[m] Finished at: 2025-07-06T13:03:21-04:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;31mERROR[m] Failed to execute goal [32morg.apache.maven.plugins:maven-surefire-plugin:2.12.4:test[m [1m(default-test)[m on project [36mantlr4[m: [1;31mThere are test failures.[m
[[1;31mERROR[m] [1;31m[m
[[1;31mERROR[m] [1;31mPlease refer to /Users/jeancarlorspaul/IdeaProjects/antlr4/tool/target/surefire-reports for the individual test results.[m
[[1;31mERROR[m] -> [1m[Help 1][m
[[1;31mERROR[m] 
[[1;31mERROR[m] To see the full stack trace of the errors, re-run Maven with the [1m-e[m switch.
[[1;31mERROR[m] Re-run Maven using the [1m-X[m switch to enable full debug logging.
[[1;31mERROR[m] 
[[1;31mERROR[m] For more information about the errors and possible solutions, please read the following articles:
[[1;31mERROR[m] [1m[Help 1][m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[[1;31mERROR[m] 
[[1;31mERROR[m] After correcting the problems, you can resume the build with the command
[[1;31mERROR[m]   [1mmvn <args> -rf :antlr4[m
